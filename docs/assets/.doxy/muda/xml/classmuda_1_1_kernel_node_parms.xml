<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.1" xml:lang="en-US">
  <compounddef id="classmuda_1_1_kernel_node_parms" kind="class" language="C++" prot="public">
    <compoundname>muda::KernelNodeParms</compoundname>
    <basecompoundref refid="classmuda_1_1_node_parms" prot="public" virt="non-virtual">muda::NodeParms</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename U</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmuda_1_1_kernel_node_parms_1a30809386320db05fad7c1731c980fd49" prot="public" static="no">
        <type><ref refid="classmuda_1_1_kernel_node_parms" kindref="compound">KernelNodeParms</ref></type>
        <definition>using muda::KernelNodeParms&lt; U &gt;::this_type =  KernelNodeParms</definition>
        <argsstring></argsstring>
        <name>this_type</name>
        <qualifiedname>muda::KernelNodeParms::this_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="20" column="5" bodyfile="src/muda/graph/kernel_node.h" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmuda_1_1_kernel_node_parms_1ad350dced4325b6570fec34d8c207f5ae" prot="private" static="no" mutable="no">
        <type>std::vector&lt; void * &gt;</type>
        <definition>std::vector&lt;void*&gt; muda::KernelNodeParms&lt; U &gt;::m_args</definition>
        <argsstring></argsstring>
        <name>m_args</name>
        <qualifiedname>muda::KernelNodeParms::m_args</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="16" column="19" bodyfile="src/muda/graph/kernel_node.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1_kernel_node_parms_1a14574ef7d75ac16f02b974d83e455bf7" prot="private" static="no" mutable="no">
        <type>cudaKernelNodeParams</type>
        <definition>cudaKernelNodeParams muda::KernelNodeParms&lt; U &gt;::m_parms</definition>
        <argsstring></argsstring>
        <name>m_parms</name>
        <qualifiedname>muda::KernelNodeParms::m_parms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="17" column="26" bodyfile="src/muda/graph/kernel_node.h" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmuda_1_1_kernel_node_parms_1afab89afd724f1b07b1aaad6bdc61c47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Graph</definition>
        <argsstring></argsstring>
        <name>Graph</name>
        <qualifiedname>muda::KernelNodeParms::Graph</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_graph" kindref="compound">Graph</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="21" column="18" bodyfile="src/muda/graph/kernel_node.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmuda_1_1_kernel_node_parms_1adcf99b09406c6d70b9184ed17eb2f5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class std::shared_ptr&lt; this_type &gt;</definition>
        <argsstring></argsstring>
        <name>std::shared_ptr&lt; this_type &gt;</name>
        <qualifiedname>muda::KernelNodeParms::shared_ptr&lt; this_type &gt;</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classmuda_1_1_kernel_node_parms" kindref="compound">this_type</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="21" column="18" bodyfile="src/muda/graph/kernel_node.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmuda_1_1_kernel_node_parms_1af05f534a9f1f49b53acc37a7b81ec840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class std::unique_ptr&lt; this_type &gt;</definition>
        <argsstring></argsstring>
        <name>std::unique_ptr&lt; this_type &gt;</name>
        <qualifiedname>muda::KernelNodeParms::unique_ptr&lt; this_type &gt;</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classmuda_1_1_kernel_node_parms" kindref="compound">this_type</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="21" column="18" bodyfile="src/muda/graph/kernel_node.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmuda_1_1_kernel_node_parms_1ab1d740ca961009fa00a4f7468cdee9d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class std::weak_ptr&lt; this_type &gt;</definition>
        <argsstring></argsstring>
        <name>std::weak_ptr&lt; this_type &gt;</name>
        <qualifiedname>muda::KernelNodeParms::weak_ptr&lt; this_type &gt;</qualifiedname>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classmuda_1_1_kernel_node_parms" kindref="compound">this_type</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="21" column="18" bodyfile="src/muda/graph/kernel_node.h" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmuda_1_1_kernel_node_parms_1a4fe3df1a0d3f15b1c9a26ea3573440a8" prot="public" static="no" mutable="no">
        <type>U</type>
        <definition>U muda::KernelNodeParms&lt; U &gt;::kernelParmData</definition>
        <argsstring></argsstring>
        <name>kernelParmData</name>
        <qualifiedname>muda::KernelNodeParms::kernelParmData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="34" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1ac39ccd11422e07577d264e5e680e1f8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>muda::KernelNodeParms&lt; U &gt;::KernelNodeParms</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>KernelNodeParms</name>
        <qualifiedname>muda::KernelNodeParms::KernelNodeParms</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="27" column="5" bodyfile="src/muda/graph/kernel_node.h" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1a73b11e0624875857b3fe2c3429ccd90f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::KernelNodeParms&lt; U &gt;::KernelNodeParms</definition>
        <argsstring>()</argsstring>
        <name>KernelNodeParms</name>
        <qualifiedname>muda::KernelNodeParms::KernelNodeParms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="33" column="5" bodyfile="src/muda/graph/kernel_node.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1ac7cc1443ba41c289cd93903629352123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::KernelNodeParms&lt; U &gt;::func</definition>
        <argsstring>()</argsstring>
        <name>func</name>
        <qualifiedname>muda::KernelNodeParms::func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="35" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1a82748a2d1ec014c82cf0329d9e976d60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::KernelNodeParms&lt; U &gt;::func</definition>
        <argsstring>(void *v)</argsstring>
        <name>func</name>
        <qualifiedname>muda::KernelNodeParms::func</qualifiedname>
        <param>
          <type>void *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="36" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1ae67103b322454ef0b41ef9e9915733c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::KernelNodeParms&lt; U &gt;::grid_dim</definition>
        <argsstring>()</argsstring>
        <name>grid_dim</name>
        <qualifiedname>muda::KernelNodeParms::grid_dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="37" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1acdeec486e82f0402cfbef25446ce64d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::KernelNodeParms&lt; U &gt;::grid_dim</definition>
        <argsstring>(const dim3 &amp;v)</argsstring>
        <name>grid_dim</name>
        <qualifiedname>muda::KernelNodeParms::grid_dim</qualifiedname>
        <param>
          <type>const dim3 &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="38" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1a40247ca63bf432dab73f6de86932ba97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::KernelNodeParms&lt; U &gt;::block_dim</definition>
        <argsstring>()</argsstring>
        <name>block_dim</name>
        <qualifiedname>muda::KernelNodeParms::block_dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="39" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1afa1f98d0fa5d82ffc1a533d62da18fab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::KernelNodeParms&lt; U &gt;::block_dim</definition>
        <argsstring>(const dim3 &amp;v)</argsstring>
        <name>block_dim</name>
        <qualifiedname>muda::KernelNodeParms::block_dim</qualifiedname>
        <param>
          <type>const dim3 &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="40" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1a85e662ec0b984c8c499e03634a9aedcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::KernelNodeParms&lt; U &gt;::shared_mem_bytes</definition>
        <argsstring>()</argsstring>
        <name>shared_mem_bytes</name>
        <qualifiedname>muda::KernelNodeParms::shared_mem_bytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="41" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1af9195b2fa1ed3ce1d786cd19d7d951d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::KernelNodeParms&lt; U &gt;::shared_mem_bytes</definition>
        <argsstring>(unsigned int v)</argsstring>
        <name>shared_mem_bytes</name>
        <qualifiedname>muda::KernelNodeParms::shared_mem_bytes</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="42" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1a8eb5ec5fdd7a0e6b2816bfd2b0d160c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::KernelNodeParms&lt; U &gt;::kernel_params</definition>
        <argsstring>()</argsstring>
        <name>kernel_params</name>
        <qualifiedname>muda::KernelNodeParms::kernel_params</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="43" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1a2b2c51460ba66d867c992d26890381d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::KernelNodeParms&lt; U &gt;::kernel_params</definition>
        <argsstring>(const std::vector&lt; void * &gt; &amp;v)</argsstring>
        <name>kernel_params</name>
        <qualifiedname>muda::KernelNodeParms::kernel_params</qualifiedname>
        <param>
          <type>const std::vector&lt; void * &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="44" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1ad447b3066aa1ef8d1b3cf64949879b26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::KernelNodeParms&lt; U &gt;::parse</definition>
        <argsstring>(std::function&lt; std::vector&lt; void * &gt;(U &amp;)&gt; pred)</argsstring>
        <name>parse</name>
        <qualifiedname>muda::KernelNodeParms::parse</qualifiedname>
        <param>
          <type>std::function&lt; std::vector&lt; void * &gt;(U &amp;)&gt;</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="49" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1ad8122af95113184029e8c39894e5ff7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::KernelNodeParms&lt; U &gt;::extra</definition>
        <argsstring>()</argsstring>
        <name>extra</name>
        <qualifiedname>muda::KernelNodeParms::extra</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="54" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1a73ebd7d84d1cc593e920bee830e85a14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::KernelNodeParms&lt; U &gt;::extra</definition>
        <argsstring>(void **v)</argsstring>
        <name>extra</name>
        <qualifiedname>muda::KernelNodeParms::extra</qualifiedname>
        <param>
          <type>void **</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="55" column="10" bodyfile="src/muda/graph/kernel_node.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_kernel_node_parms_1aac56fb340b9aec465566795fe7c1f037" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const cudaKernelNodeParams *</type>
        <definition>const cudaKernelNodeParams * muda::KernelNodeParms&lt; U &gt;::handle</definition>
        <argsstring>() const</argsstring>
        <name>handle</name>
        <qualifiedname>muda::KernelNodeParms::handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/kernel_node.h" line="57" column="32" bodyfile="src/muda/graph/kernel_node.h" bodystart="57" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>muda::KernelNodeParms&lt; U &gt;</label>
        <link refid="classmuda_1_1_kernel_node_parms"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::NodeParms</label>
        <link refid="classmuda_1_1_node_parms"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>muda::KernelNodeParms&lt; U &gt;</label>
        <link refid="classmuda_1_1_kernel_node_parms"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::NodeParms</label>
        <link refid="classmuda_1_1_node_parms"/>
      </node>
    </collaborationgraph>
    <location file="src/muda/graph/kernel_node.h" line="14" column="1" bodyfile="src/muda/graph/kernel_node.h" bodystart="15" bodyend="58"/>
    <listofallmembers>
      <member refid="classmuda_1_1_kernel_node_parms_1a40247ca63bf432dab73f6de86932ba97" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>block_dim</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1afa1f98d0fa5d82ffc1a533d62da18fab" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>block_dim</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1ad8122af95113184029e8c39894e5ff7e" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>extra</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a73ebd7d84d1cc593e920bee830e85a14" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>extra</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1ac7cc1443ba41c289cd93903629352123" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>func</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a82748a2d1ec014c82cf0329d9e976d60" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>func</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1afab89afd724f1b07b1aaad6bdc61c47a" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>Graph</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1ae67103b322454ef0b41ef9e9915733c0" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>grid_dim</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1acdeec486e82f0402cfbef25446ce64d4" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>grid_dim</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1aac56fb340b9aec465566795fe7c1f037" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>handle</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a8eb5ec5fdd7a0e6b2816bfd2b0d160c0" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>kernel_params</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a2b2c51460ba66d867c992d26890381d4" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>kernel_params</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1ac39ccd11422e07577d264e5e680e1f8f" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>KernelNodeParms</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a73b11e0624875857b3fe2c3429ccd90f" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>KernelNodeParms</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a4fe3df1a0d3f15b1c9a26ea3573440a8" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>kernelParmData</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1ad350dced4325b6570fec34d8c207f5ae" prot="private" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>m_args</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a14574ef7d75ac16f02b974d83e455bf7" prot="private" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>m_parms</name></member>
      <member refid="classmuda_1_1_node_parms_1a1528e8fc362529051c7419ac8ae7b5f3" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>NodeParms</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1ad447b3066aa1ef8d1b3cf64949879b26" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>parse</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a85e662ec0b984c8c499e03634a9aedcb" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>shared_mem_bytes</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1af9195b2fa1ed3ce1d786cd19d7d951d4" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>shared_mem_bytes</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1adcf99b09406c6d70b9184ed17eb2f5f0" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>std::shared_ptr&lt; this_type &gt;</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1af05f534a9f1f49b53acc37a7b81ec840" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>std::unique_ptr&lt; this_type &gt;</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1ab1d740ca961009fa00a4f7468cdee9d3" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>std::weak_ptr&lt; this_type &gt;</name></member>
      <member refid="classmuda_1_1_kernel_node_parms_1a30809386320db05fad7c1731c980fd49" prot="public" virt="non-virtual"><scope>muda::KernelNodeParms</scope><name>this_type</name></member>
      <member refid="classmuda_1_1_node_parms_1a60ecdb5fb5673911a02d62e9202e2ad8" prot="public" virt="virtual"><scope>muda::KernelNodeParms</scope><name>~NodeParms</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

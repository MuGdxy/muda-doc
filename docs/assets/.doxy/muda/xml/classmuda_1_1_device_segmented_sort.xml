<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmuda_1_1_device_segmented_sort" kind="class" language="C++" prot="public">
    <compoundname>muda::DeviceSegmentedSort</compoundname>
    <basecompoundref refid="classmuda_1_1_cub_wrapper" prot="public" virt="non-virtual">muda::CubWrapper&lt; DeviceSegmentedSort &gt;</basecompoundref>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmuda_1_1_device_segmented_sort_1a09a5f41e09dbf0466697ccdeb84a6bc1" prot="private" static="no">
        <type><ref refid="classmuda_1_1_cub_wrapper" kindref="compound">CubWrapper</ref>&lt; <ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &gt;</type>
        <definition>using muda::DeviceSegmentedSort::Base =  CubWrapper&lt;DeviceSegmentedSort&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>muda::DeviceSegmentedSort::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="13" column="5" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="13" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a91a6596b11b34189f30c957dc6cef31f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeys</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeys</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="19" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="19" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a2aabcdd9024d270a06414f3000cc12c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeysDescending</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeysDescending</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="39" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="39" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a3383ecde0826c37ab551d1df2132b5f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeys</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeys</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="61" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="61" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a739f4ecd28227e8981262755ec56a855" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeysDescending</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeysDescending</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="73" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1ac3d2557e98819b0c1120b62449f14e1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeys</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeys</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="85" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="85" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a60ad98bb35075bee473c435baf337246" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeysDescending</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeysDescending</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="106" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="106" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a934e75fbd43b12218cdc40c37eceb8a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeys</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeys</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="128" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="128" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a79699ea4ac02d9a1af816bc6be748fbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeysDescending</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeysDescending</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="140" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="140" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a4391dea7901aab98c07ac6770f5be2d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairs</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairs</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="152" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="152" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1ab14684576517adfed28e858d721c699a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairsDescending</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairsDescending</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="177" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="177" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1ac01a003a69d69ffdf027cfb5222a2d2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairs</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairs</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="202" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="202" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1abc18a91a441291a52d6aa5e44d7b06c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairsDescending</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairsDescending</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="223" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="223" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1ac60334a96e0a565d29022e5421ea1c2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairs</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairs</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="236" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="236" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a154d74ce2cef7b2fdd09f5c5901b04d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairsDescending</definition>
        <argsstring>(const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairsDescending</qualifiedname>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="262" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="262" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1ab15b656be33fb34529c7afe8c6936a4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairs</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairs</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="288" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="288" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a89c8dd248adb5b58295617937eb8c360" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairsDescending</definition>
        <argsstring>(cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairsDescending</qualifiedname>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="301" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="301" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a82e90a711c28ae8d5112780246a993cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeys</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeys</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="315" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="315" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a6898bc7437a4769c0fe113327eadf0db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeysDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeysDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="338" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="338" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a65f829e2d4508411fc11bd3899ab0496" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeys</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeys</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="362" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="362" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a0d30581a47a3014c3eb1f2ead148f37e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortKeysDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortKeysDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="376" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="376" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1ac9e827f2ae2a900a9421c209b1a42d45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeys</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeys</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="390" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="390" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a8bc1902497a855f640eb332c7d22010f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeysDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeysDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="414" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="414" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a856a0e61da8d5a24a5d2f529c969152e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeys</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeys</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeys</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="438" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="438" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a252bbb3566c035a62283a5af1fe9be24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortKeysDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortKeysDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortKeysDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="452" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="452" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a4b63605d3052ae87bea0794fde56eff1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairs</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairs</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="466" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="466" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a6905d6fd9e85f84f8bf574612dd3a239" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairsDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairsDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="494" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="494" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1ac64c2097f4eba3198ef61bb716d33cc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairs</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairs</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="521" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="521" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a1c8bda984973ce966d3218273b1587a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::SortPairsDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>SortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::SortPairsDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="536" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="536" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a85f545e96b0803ad2fd2a2b2d2a34e1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairs</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairs</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="551" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="551" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a5b3649a806077587d3160df8d8e4ab98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairsDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, const KeyT *d_keys_in, KeyT *d_keys_out, const ValueT *d_values_in, ValueT *d_values_out, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairsDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>const KeyT *</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>KeyT *</type>
          <declname>d_keys_out</declname>
        </param>
        <param>
          <type>const ValueT *</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValueT *</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="579" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="579" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1aa6998f3dcdd6d702a4ef2385c04206ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairs</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairs</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairs</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="607" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="607" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_segmented_sort_1a82d3158263011b5ae5bc29ef7090f04e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyT</type>
          </param>
          <param>
            <type>typename ValueT</type>
          </param>
          <param>
            <type>typename BeginOffsetIteratorT</type>
          </param>
          <param>
            <type>typename EndOffsetIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_segmented_sort" kindref="compound">DeviceSegmentedSort</ref> &amp;</type>
        <definition>DeviceSegmentedSort &amp; muda::DeviceSegmentedSort::StableSortPairsDescending</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, cub::DoubleBuffer&lt; KeyT &gt; &amp;d_keys, cub::DoubleBuffer&lt; ValueT &gt; &amp;d_values, int num_items, int num_segments, BeginOffsetIteratorT d_begin_offsets, EndOffsetIteratorT d_end_offsets)</argsstring>
        <name>StableSortPairsDescending</name>
        <qualifiedname>muda::DeviceSegmentedSort::StableSortPairsDescending</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; KeyT &gt; &amp;</type>
          <declname>d_keys</declname>
        </param>
        <param>
          <type>cub::DoubleBuffer&lt; ValueT &gt; &amp;</type>
          <declname>d_values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>BeginOffsetIteratorT</type>
          <declname>d_begin_offsets</declname>
        </param>
        <param>
          <type>EndOffsetIteratorT</type>
          <declname>d_end_offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_segmented_sort.h" line="622" column="25" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="622" bodyend="642"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>muda::CubWrapper&lt; DeviceSegmentedSort &gt;</label>
        <link refid="classmuda_1_1_cub_wrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>muda::DeviceSegmentedSort</label>
        <link refid="classmuda_1_1_device_segmented_sort"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>muda::LaunchBase&lt; T &gt;</label>
        <link refid="classmuda_1_1_launch_base"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>muda::LaunchCore</label>
        <link refid="classmuda_1_1_launch_core"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>muda::CubWrapper&lt; DeviceSegmentedSort &gt;</label>
        <link refid="classmuda_1_1_cub_wrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_muda_stream</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>muda::DeviceSegmentedSort</label>
        <link refid="classmuda_1_1_device_segmented_sort"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>muda::LaunchBase&lt; T &gt;</label>
        <link refid="classmuda_1_1_launch_base"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>muda::LaunchCore</label>
        <link refid="classmuda_1_1_launch_core"/>
      </node>
      <node id="5">
        <label>muda::Stream</label>
        <link refid="classmuda_1_1_stream"/>
      </node>
    </collaborationgraph>
    <location file="src/muda/cub/device/device_segmented_sort.h" line="11" column="1" bodyfile="src/muda/cub/device/device_segmented_sort.h" bodystart="12" bodyend="643"/>
    <listofallmembers>
      <member refid="classmuda_1_1_device_segmented_sort_1a09a5f41e09dbf0466697ccdeb84a6bc1" prot="private" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>Base</name></member>
      <member refid="classmuda_1_1_launch_base_1aa8490139890f43555c1b7baa57378616" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>callback</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a846ad2ff72dccee396a542f1ec0b4aeb" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>CubWrapper</name></member>
      <member refid="classmuda_1_1_launch_base_1a8a59e9a27775e4e12ca19a6d590790f4" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>derived_type</name></member>
      <member refid="classmuda_1_1_launch_base_1aee4564eac54df98ab98085379370a2ec" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>file_line</name></member>
      <member refid="classmuda_1_1_launch_core_1a38c542a99edea149552d82639e385ab5" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>init_stream</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a71f741726d4ab894c196264043bd2922" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>kernel_name</name></member>
      <member refid="classmuda_1_1_launch_base_1ab73495b0bfa3a7a1864284aebceb51a8" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>LaunchBase</name></member>
      <member refid="classmuda_1_1_launch_core_1a8503eff885f818a12319ca57dfd75011" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>LaunchCore</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a5e0f31303ea2f56ba4cfe04fb2ca7738" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>m_muda_stream</name></member>
      <member refid="classmuda_1_1_launch_core_1a3b5544456087d57904981118c4cdcaf8" prot="protected" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>m_stream</name></member>
      <member refid="classmuda_1_1_launch_base_1a395b0a10fee3bf2c591f49a3119df1b8" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>next</name></member>
      <member refid="classmuda_1_1_launch_base_1a841db3ede786d3312a6ca2de2139ad10" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>next</name></member>
      <member refid="classmuda_1_1_launch_base_1a65538f7d445fa3cc56ab33e609fe566a" prot="protected" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>pop_kernel_label</name></member>
      <member refid="classmuda_1_1_launch_base_1ab6b75621024e7977edcdff26c04bcdc1" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>pop_range</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1af1007ebfdee88f21fd67283499730991" prot="protected" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>prepare_buffer</name></member>
      <member refid="classmuda_1_1_launch_base_1ad6dcaaf3ea0726809ebbdb10084c3183" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>push_range</name></member>
      <member refid="classmuda_1_1_launch_base_1ad069d4ad6219f5a3b51e7c8d9e4d596f" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>record</name></member>
      <member refid="classmuda_1_1_launch_base_1a12cf6b18c76787654460c1c043907547" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>record</name></member>
      <member refid="classmuda_1_1_launch_base_1a77d57b9368424d70cd740af6eaf45a6f" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>record</name></member>
      <member refid="classmuda_1_1_launch_core_1a8aeb9e37d421f835e0fcae124e3ce0de" prot="protected" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>S</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a91a6596b11b34189f30c957dc6cef31f" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a3383ecde0826c37ab551d1df2132b5f0" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a82e90a711c28ae8d5112780246a993cb" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a65f829e2d4508411fc11bd3899ab0496" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a2aabcdd9024d270a06414f3000cc12c9" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a739f4ecd28227e8981262755ec56a855" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a6898bc7437a4769c0fe113327eadf0db" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a0d30581a47a3014c3eb1f2ead148f37e" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a4391dea7901aab98c07ac6770f5be2d4" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1ac01a003a69d69ffdf027cfb5222a2d2d" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a4b63605d3052ae87bea0794fde56eff1" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1ac64c2097f4eba3198ef61bb716d33cc1" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1ab14684576517adfed28e858d721c699a" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairsDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1abc18a91a441291a52d6aa5e44d7b06c8" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairsDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a6905d6fd9e85f84f8bf574612dd3a239" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairsDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a1c8bda984973ce966d3218273b1587a3" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>SortPairsDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1ac3d2557e98819b0c1120b62449f14e1e" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a934e75fbd43b12218cdc40c37eceb8a3" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1ac9e827f2ae2a900a9421c209b1a42d45" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a856a0e61da8d5a24a5d2f529c969152e" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeys</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a60ad98bb35075bee473c435baf337246" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a79699ea4ac02d9a1af816bc6be748fbe" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a8bc1902497a855f640eb332c7d22010f" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a252bbb3566c035a62283a5af1fe9be24" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortKeysDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1ac60334a96e0a565d29022e5421ea1c2e" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1ab15b656be33fb34529c7afe8c6936a4e" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a85f545e96b0803ad2fd2a2b2d2a34e1d" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1aa6998f3dcdd6d702a4ef2385c04206ec" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairs</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a154d74ce2cef7b2fdd09f5c5901b04d2" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairsDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a89c8dd248adb5b58295617937eb8c360" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairsDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a5b3649a806077587d3160df8d8e4ab98" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairsDescending</name></member>
      <member refid="classmuda_1_1_device_segmented_sort_1a82d3158263011b5ae5bc29ef7090f04e" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>StableSortPairsDescending</name></member>
      <member refid="classmuda_1_1_launch_core_1ab78b991329337c97d2ac3e32e995a62f" prot="protected" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>stream</name></member>
      <member refid="classmuda_1_1_launch_base_1a88cbf9478fbeaa7434ece7f300dc1c0e" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_base_1ab0fc5fbed4ec5f69a3b599af99900d98" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_base_1acbf042e86efae1683e2ab08c95095da7" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_base_1abe061bff24568f9c2fcf326a62843292" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_core_1a58e970f699c546d37c70af9bb4d3a93c" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>wait_device</name></member>
      <member refid="classmuda_1_1_launch_core_1a7b29e878817d4e42bc533edc0c89b645" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>wait_event</name></member>
      <member refid="classmuda_1_1_launch_core_1a73d5d54a7b3b59dcf8eea792e796337b" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>wait_stream</name></member>
      <member refid="classmuda_1_1_launch_base_1a59a525fea511ea1c90f5857be5d62d43" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>when</name></member>
      <member refid="classmuda_1_1_launch_base_1a543548ac0516b2c10adba68d2ae7066b" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>~LaunchBase</name></member>
      <member refid="classmuda_1_1_launch_core_1a5e4ae3435bce9d4ad706b5e347a3040f" prot="public" virt="non-virtual"><scope>muda::DeviceSegmentedSort</scope><name>~LaunchCore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.1" xml:lang="en-US">
  <compounddef id="classmuda_1_1_host_node_parms" kind="class" language="C++" prot="public">
    <compoundname>muda::HostNodeParms</compoundname>
    <basecompoundref refid="classmuda_1_1_node_parms" prot="public" virt="non-virtual">muda::NodeParms</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmuda_1_1_host_node_parms_1a6bb78b14956df6134c35f5d5b4134861" prot="public" static="no">
        <type><ref refid="classmuda_1_1_host_node_parms" kindref="compound">HostNodeParms</ref></type>
        <definition>using muda::HostNodeParms&lt; T &gt;::this_type =  HostNodeParms</definition>
        <argsstring></argsstring>
        <name>this_type</name>
        <qualifiedname>muda::HostNodeParms::this_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="20" column="5" bodyfile="src/muda/graph/host_node.h" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmuda_1_1_host_node_parms_1ac65f46787533fca246248e199e6a99b1" prot="private" static="no" mutable="no">
        <type>cudaHostNodeParams</type>
        <definition>cudaHostNodeParams muda::HostNodeParms&lt; T &gt;::m_parms</definition>
        <argsstring></argsstring>
        <name>m_parms</name>
        <qualifiedname>muda::HostNodeParms::m_parms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="16" column="24" bodyfile="src/muda/graph/host_node.h" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmuda_1_1_host_node_parms_1a1689aa5fd71abbda900874bd0d5eceda" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T muda::HostNodeParms&lt; T &gt;::hostData</definition>
        <argsstring></argsstring>
        <name>hostData</name>
        <qualifiedname>muda::HostNodeParms::hostData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="19" column="7" bodyfile="src/muda/graph/host_node.h" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmuda_1_1_host_node_parms_1afab89afd724f1b07b1aaad6bdc61c47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Graph</definition>
        <argsstring></argsstring>
        <name>Graph</name>
        <qualifiedname>muda::HostNodeParms::Graph</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_graph" kindref="compound">Graph</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="21" column="18" bodyfile="src/muda/graph/host_node.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmuda_1_1_host_node_parms_1adcf99b09406c6d70b9184ed17eb2f5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class std::shared_ptr&lt; this_type &gt;</definition>
        <argsstring></argsstring>
        <name>std::shared_ptr&lt; this_type &gt;</name>
        <qualifiedname>muda::HostNodeParms::shared_ptr&lt; this_type &gt;</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classmuda_1_1_host_node_parms" kindref="compound">this_type</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="21" column="18" bodyfile="src/muda/graph/host_node.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmuda_1_1_host_node_parms_1af05f534a9f1f49b53acc37a7b81ec840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class std::unique_ptr&lt; this_type &gt;</definition>
        <argsstring></argsstring>
        <name>std::unique_ptr&lt; this_type &gt;</name>
        <qualifiedname>muda::HostNodeParms::unique_ptr&lt; this_type &gt;</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classmuda_1_1_host_node_parms" kindref="compound">this_type</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="21" column="18" bodyfile="src/muda/graph/host_node.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmuda_1_1_host_node_parms_1ab1d740ca961009fa00a4f7468cdee9d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class std::weak_ptr&lt; this_type &gt;</definition>
        <argsstring></argsstring>
        <name>std::weak_ptr&lt; this_type &gt;</name>
        <qualifiedname>muda::HostNodeParms::weak_ptr&lt; this_type &gt;</qualifiedname>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classmuda_1_1_host_node_parms" kindref="compound">this_type</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="21" column="18" bodyfile="src/muda/graph/host_node.h" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1_host_node_parms_1ac5d4c21665c7f8185ddd889c37a3e819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::HostNodeParms&lt; T &gt;::HostNodeParms</definition>
        <argsstring>(const T &amp;f)</argsstring>
        <name>HostNodeParms</name>
        <qualifiedname>muda::HostNodeParms::HostNodeParms</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="26" column="5" bodyfile="src/muda/graph/host_node.h" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_host_node_parms_1a924fcbcceef7f23e6ca6e20f9849e294" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::HostNodeParms&lt; T &gt;::fn</definition>
        <argsstring>() const</argsstring>
        <name>fn</name>
        <qualifiedname>muda::HostNodeParms::fn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="32" column="10" bodyfile="src/muda/graph/host_node.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_host_node_parms_1aecf4bc67bd5f56bd4c9906a131b9e3b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::HostNodeParms&lt; T &gt;::fn</definition>
        <argsstring>(cudaHostFn_t fn)</argsstring>
        <name>fn</name>
        <qualifiedname>muda::HostNodeParms::fn</qualifiedname>
        <param>
          <type>cudaHostFn_t</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="33" column="10" bodyfile="src/muda/graph/host_node.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_host_node_parms_1ad14909095e64d1073544e08c31fd405e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::HostNodeParms&lt; T &gt;::userdata</definition>
        <argsstring>() const</argsstring>
        <name>userdata</name>
        <qualifiedname>muda::HostNodeParms::userdata</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="34" column="10" bodyfile="src/muda/graph/host_node.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_host_node_parms_1a23a7f3ed29c6203137af975635144b1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::HostNodeParms&lt; T &gt;::userdata</definition>
        <argsstring>(void *userdata)</argsstring>
        <name>userdata</name>
        <qualifiedname>muda::HostNodeParms::userdata</qualifiedname>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="35" column="10" bodyfile="src/muda/graph/host_node.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_host_node_parms_1a455a9107c871ce27b4cb8e9838b922e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const cudaHostNodeParams *</type>
        <definition>const cudaHostNodeParams * muda::HostNodeParms&lt; T &gt;::handle</definition>
        <argsstring>() const</argsstring>
        <name>handle</name>
        <qualifiedname>muda::HostNodeParms::handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="36" column="30" bodyfile="src/muda/graph/host_node.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_host_node_parms_1a2bf7e70bda6a9611f9d8fdd20eb18b71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>cudaHostNodeParams *</type>
        <definition>cudaHostNodeParams * muda::HostNodeParms&lt; T &gt;::handle</definition>
        <argsstring>()</argsstring>
        <name>handle</name>
        <qualifiedname>muda::HostNodeParms::handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/graph/host_node.h" line="37" column="30" bodyfile="src/muda/graph/host_node.h" bodystart="37" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>muda::HostNodeParms&lt; T &gt;</label>
        <link refid="classmuda_1_1_host_node_parms"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::NodeParms</label>
        <link refid="classmuda_1_1_node_parms"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>muda::HostNodeParms&lt; T &gt;</label>
        <link refid="classmuda_1_1_host_node_parms"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::NodeParms</label>
        <link refid="classmuda_1_1_node_parms"/>
      </node>
    </collaborationgraph>
    <location file="src/muda/graph/host_node.h" line="14" column="1" bodyfile="src/muda/graph/host_node.h" bodystart="15" bodyend="38"/>
    <listofallmembers>
      <member refid="classmuda_1_1_host_node_parms_1a924fcbcceef7f23e6ca6e20f9849e294" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>fn</name></member>
      <member refid="classmuda_1_1_host_node_parms_1aecf4bc67bd5f56bd4c9906a131b9e3b9" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>fn</name></member>
      <member refid="classmuda_1_1_host_node_parms_1afab89afd724f1b07b1aaad6bdc61c47a" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>Graph</name></member>
      <member refid="classmuda_1_1_host_node_parms_1a455a9107c871ce27b4cb8e9838b922e5" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>handle</name></member>
      <member refid="classmuda_1_1_host_node_parms_1a2bf7e70bda6a9611f9d8fdd20eb18b71" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>handle</name></member>
      <member refid="classmuda_1_1_host_node_parms_1a1689aa5fd71abbda900874bd0d5eceda" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>hostData</name></member>
      <member refid="classmuda_1_1_host_node_parms_1ac5d4c21665c7f8185ddd889c37a3e819" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>HostNodeParms</name></member>
      <member refid="classmuda_1_1_host_node_parms_1ac65f46787533fca246248e199e6a99b1" prot="private" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>m_parms</name></member>
      <member refid="classmuda_1_1_node_parms_1a1528e8fc362529051c7419ac8ae7b5f3" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>NodeParms</name></member>
      <member refid="classmuda_1_1_host_node_parms_1adcf99b09406c6d70b9184ed17eb2f5f0" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>std::shared_ptr&lt; this_type &gt;</name></member>
      <member refid="classmuda_1_1_host_node_parms_1af05f534a9f1f49b53acc37a7b81ec840" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>std::unique_ptr&lt; this_type &gt;</name></member>
      <member refid="classmuda_1_1_host_node_parms_1ab1d740ca961009fa00a4f7468cdee9d3" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>std::weak_ptr&lt; this_type &gt;</name></member>
      <member refid="classmuda_1_1_host_node_parms_1a6bb78b14956df6134c35f5d5b4134861" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>this_type</name></member>
      <member refid="classmuda_1_1_host_node_parms_1ad14909095e64d1073544e08c31fd405e" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>userdata</name></member>
      <member refid="classmuda_1_1_host_node_parms_1a23a7f3ed29c6203137af975635144b1b" prot="public" virt="non-virtual"><scope>muda::HostNodeParms</scope><name>userdata</name></member>
      <member refid="classmuda_1_1_node_parms_1a60ecdb5fb5673911a02d62e9202e2ad8" prot="public" virt="virtual"><scope>muda::HostNodeParms</scope><name>~NodeParms</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

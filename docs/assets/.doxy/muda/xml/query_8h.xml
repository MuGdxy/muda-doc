<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.1" xml:lang="en-US">
  <compounddef id="query_8h" kind="file" language="C++">
    <compoundname>query.h</compoundname>
    <includes refid="bvh_8h" local="no">muda/ext/geo/lbvh/bvh.h</includes>
    <includes refid="predicator_8h" local="no">muda/ext/geo/lbvh/predicator.h</includes>
    <includedby refid="lbvh_2lbvh_8h" local="no">src/muda/ext/geo/lbvh/lbvh.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>muda/assert.h</label>
        <link refid="assert_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>muda/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>muda/buffer/buffer_fwd.h</label>
        <link refid="buffer__fwd_8h_source"/>
      </node>
      <node id="98">
        <label>muda/buffer/buffer_launch.h</label>
        <link refid="buffer__launch_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>muda/buffer/buffer_view.h</label>
        <link refid="buffer__view_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>muda/buffer/device_buffer.h</label>
        <link refid="device__buffer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>muda/buffer/device_var.h</label>
        <link refid="device__var_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>muda/buffer/graph_buffer_view.h</label>
        <link refid="graph__buffer__view_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>muda/buffer/graph_var_view.h</label>
        <link refid="graph__var__view_8h_source"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>muda/buffer/var_view.h</label>
        <link refid="var__view_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>muda/check/check.h</label>
        <link refid="check_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>muda/check/check_cublas.h</label>
        <link refid="check__cublas_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>muda/check/check_cuda_errors.h</label>
        <link refid="check__cuda__errors_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>muda/check/check_cusolver.h</label>
        <link refid="check__cusolver_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>muda/check/check_cusparse.h</label>
        <link refid="check__cusparse_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>muda/compute_graph/compute_graph.h</label>
        <link refid="compute__graph_2compute__graph_8h_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>muda/compute_graph/compute_graph_closure_id.h</label>
        <link refid="compute__graph__closure__id_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>muda/compute_graph/compute_graph_dependency.h</label>
        <link refid="compute__graph__dependency_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>muda/compute_graph/compute_graph_flag.h</label>
        <link refid="compute__graph__flag_8h_source"/>
      </node>
      <node id="115">
        <label>muda/compute_graph/compute_graph_fwd.h</label>
        <link refid="compute__graph__fwd_8h_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>muda/compute_graph/compute_graph_node_id.h</label>
        <link refid="compute__graph__node__id_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>muda/compute_graph/compute_graph_node_type.h</label>
        <link refid="compute__graph__node__type_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>muda/compute_graph/compute_graph_phase.h</label>
        <link refid="compute__graph__phase_8h_source"/>
      </node>
      <node id="102">
        <label>muda/compute_graph/compute_graph_var.h</label>
        <link refid="compute__graph__var_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>muda/compute_graph/compute_graph_var_id.h</label>
        <link refid="compute__graph__var__id_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>muda/compute_graph/compute_graph_var_usage.h</label>
        <link refid="compute__graph__var__usage_8h_source"/>
      </node>
      <node id="114">
        <label>muda/compute_graph/graphviz_options.h</label>
        <link refid="graphviz__options_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>muda/container.h</label>
        <link refid="container_8h_source"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>muda/container/var.h</label>
        <link refid="var_8h_source"/>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>muda/container/vector.h</label>
        <link refid="vector_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>muda/cub/device/cub_wrapper.h</label>
        <link refid="cub__wrapper_8h_source"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>muda/cub/device/device_reduce.h</label>
        <link refid="device__reduce_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>cooperative_groups.h</label>
        <link refid="cooperative__groups_8h_source"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cuda_runtime.h</label>
        <link refid="cuda__runtime_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cuda_runtime_api.h</label>
        <link refid="cuda__runtime__api_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>muda/exception.h</label>
        <link refid="exception_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>muda/ext/geo/lbvh/aabb.h</label>
        <link refid="aabb_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>muda/ext/geo/lbvh/bvh.h</label>
        <link refid="bvh_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>muda/ext/geo/lbvh/bvh_viewer.h</label>
        <link refid="bvh__viewer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>muda/ext/geo/lbvh/morton_code.h</label>
        <link refid="morton__code_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>muda/ext/geo/lbvh/predicator.h</label>
        <link refid="predicator_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/muda/ext/geo/lbvh/query.h</label>
        <link refid="query_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>muda/ext/geo/lbvh/utility.h</label>
        <link refid="utility_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>muda/graph/event_node.h</label>
        <link refid="event__node_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>muda/graph/graph.h</label>
        <link refid="graph_2graph_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>muda/graph/graph_base.h</label>
        <link refid="graph__base_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>muda/graph/graph_exec.h</label>
        <link refid="graph__exec_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>muda/graph/graph_instantiate_flag.h</label>
        <link refid="graph__instantiate__flag_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>muda/graph/graph_viewer.h</label>
        <link refid="graph__viewer_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>muda/graph/host_node.h</label>
        <link refid="host__node_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>muda/graph/kernel_node.h</label>
        <link refid="kernel__node_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>muda/graph/memory_node.h</label>
        <link refid="memory__node_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>muda/launch/event.h</label>
        <link refid="event_8h_source"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>muda/launch/kernel_tag.h</label>
        <link refid="kernel__tag_8h_source"/>
      </node>
      <node id="80">
        <label>muda/launch/launch_base.h</label>
        <link refid="launch__base_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>muda/launch/stream.h</label>
        <link refid="stream_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>muda/literal/unit.h</label>
        <link refid="unit_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>muda/mstl/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>muda/mstl/tcb/span.hpp</label>
        <link refid="span_8hpp_source"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>muda/muda_config.h</label>
        <link refid="muda__config_8h_source"/>
      </node>
      <node id="8">
        <label>muda/muda_def.h</label>
        <link refid="muda__def_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>muda/print.h</label>
        <link refid="print_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>muda/tools/debug_break.h</label>
        <link refid="debug__break_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>muda/tools/debug_log.h</label>
        <link refid="debug__log_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>muda/tools/extent.h</label>
        <link refid="extent_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>muda/tools/flag.h</label>
        <link refid="flag_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>muda/tools/fuzzy.h</label>
        <link refid="fuzzy_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>muda/tools/host_device_string_cache.h</label>
        <link refid="host__device__string__cache_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>muda/tools/id_with_type.h</label>
        <link refid="id__with__type_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>muda/tools/launch_info_cache.h</label>
        <link refid="launch__info__cache_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>muda/tools/platform.h</label>
        <link refid="platform_8h_source"/>
      </node>
      <node id="36">
        <label>muda/tools/string_pointer.h</label>
        <link refid="string__pointer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>muda/tools/temp_buffer.h</label>
        <link refid="temp__buffer_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>muda/tools/version.h</label>
        <link refid="version_8h_source"/>
      </node>
      <node id="39">
        <label>muda/type_traits/type_modifier.h</label>
        <link refid="type__modifier_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>muda/view/view_base.h</label>
        <link refid="view__base_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>muda/viewer/dense.h</label>
        <link refid="dense_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>muda/viewer/dense/dense_0d.h</label>
        <link refid="dense__0d_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>muda/viewer/dense/dense_1d.h</label>
        <link refid="dense__1d_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>muda/viewer/dense/dense_2d.h</label>
        <link refid="dense__2d_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>muda/viewer/dense/dense_3d.h</label>
        <link refid="dense__3d_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>muda/viewer/viewer_base.h</label>
        <link refid="viewer__base_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>array</label>
      </node>
      <node id="13">
        <label>cassert</label>
      </node>
      <node id="23">
        <label>cinttypes</label>
      </node>
      <node id="60">
        <label>cmath</label>
      </node>
      <node id="108">
        <label>cstddef</label>
      </node>
      <node id="62">
        <label>cstdint</label>
      </node>
      <node id="19">
        <label>cstdio</label>
      </node>
      <node id="12">
        <label>cstdlib</label>
      </node>
      <node id="38">
        <label>cstring</label>
      </node>
      <node id="149">
        <label>cub/device/device_reduce.cuh</label>
      </node>
      <node id="79">
        <label>cub/version.cuh</label>
      </node>
      <node id="32">
        <label>cublas_v2.h</label>
      </node>
      <node id="5">
        <label>cuda.h</label>
      </node>
      <node id="130">
        <label>cuda_device_runtime_api.h</label>
      </node>
      <node id="85">
        <label>cuda_profiler_api.h</label>
      </node>
      <node id="34">
        <label>cusolver_common.h</label>
      </node>
      <node id="30">
        <label>cusparse.h</label>
      </node>
      <node id="100">
        <label>details/buffer_launch.inl</label>
      </node>
      <node id="50">
        <label>details/buffer_view.inl</label>
      </node>
      <node id="147">
        <label>details/compute_graph.inl</label>
      </node>
      <node id="117">
        <label>details/compute_graph_var.inl</label>
      </node>
      <node id="148">
        <label>details/cub_wrapper_macro_def.inl</label>
      </node>
      <node id="150">
        <label>details/cub_wrapper_macro_undef.inl</label>
      </node>
      <node id="93">
        <label>details/device_buffer.inl</label>
      </node>
      <node id="97">
        <label>details/device_var.inl</label>
      </node>
      <node id="88">
        <label>details/event.inl</label>
      </node>
      <node id="141">
        <label>details/graph.inl</label>
      </node>
      <node id="118">
        <label>details/graph_buffer_view.inl</label>
      </node>
      <node id="139">
        <label>details/graph_exec.inl</label>
      </node>
      <node id="120">
        <label>details/graph_var_view.inl</label>
      </node>
      <node id="138">
        <label>details/graph_viewer.inl</label>
      </node>
      <node id="90">
        <label>details/launch_base.inl</label>
      </node>
      <node id="126">
        <label>details/stream.inl</label>
      </node>
      <node id="96">
        <label>details/var_view.inl</label>
      </node>
      <node id="81">
        <label>device_launch_parameters.h</label>
      </node>
      <node id="27">
        <label>exception</label>
      </node>
      <node id="82">
        <label>functional</label>
      </node>
      <node id="131">
        <label>list</label>
      </node>
      <node id="104">
        <label>map</label>
      </node>
      <node id="58">
        <label>math_constants.h</label>
      </node>
      <node id="83">
        <label>memory</label>
      </node>
      <node id="111">
        <label>ostream</label>
      </node>
      <node id="103">
        <label>set</label>
      </node>
      <node id="17">
        <label>signal.h</label>
      </node>
      <node id="28">
        <label>string</label>
      </node>
      <node id="145">
        <label>string_view</label>
      </node>
      <node id="43">
        <label>thrust/device_allocator.h</label>
      </node>
      <node id="44">
        <label>thrust/device_vector.h</label>
      </node>
      <node id="76">
        <label>thrust/execution_policy.h</label>
      </node>
      <node id="69">
        <label>thrust/fill.h</label>
      </node>
      <node id="70">
        <label>thrust/for_each.h</label>
      </node>
      <node id="66">
        <label>thrust/functional.h</label>
      </node>
      <node id="45">
        <label>thrust/host_vector.h</label>
      </node>
      <node id="73">
        <label>thrust/iterator/constant_iterator.h</label>
      </node>
      <node id="74">
        <label>thrust/iterator/counting_iterator.h</label>
      </node>
      <node id="64">
        <label>thrust/pair.h</label>
      </node>
      <node id="72">
        <label>thrust/reduce.h</label>
      </node>
      <node id="67">
        <label>thrust/scan.h</label>
      </node>
      <node id="68">
        <label>thrust/sort.h</label>
      </node>
      <node id="59">
        <label>thrust/swap.h</label>
      </node>
      <node id="71">
        <label>thrust/transform.h</label>
      </node>
      <node id="65">
        <label>thrust/tuple.h</label>
      </node>
      <node id="75">
        <label>thrust/unique.h</label>
      </node>
      <node id="40">
        <label>type_traits</label>
      </node>
      <node id="35">
        <label>unordered_map</label>
      </node>
      <node id="128">
        <label>unordered_set</label>
      </node>
      <node id="37">
        <label>vector</label>
      </node>
      <node id="57">
        <label>vector_types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/muda/ext/geo/lbvh.h</label>
        <link refid="lbvh_8h_source"/>
      </node>
      <node id="2">
        <label>src/muda/ext/geo/lbvh/lbvh.h</label>
        <link refid="lbvh_2lbvh_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/muda/ext/geo/lbvh/query.h</label>
        <link refid="query_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacemuda">muda</innernamespace>
    <innernamespace refid="namespacemuda_1_1lbvh">muda::lbvh</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;muda/ext/geo/lbvh/bvh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;muda/ext/geo/lbvh/predicator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">muda::lbvh</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Real,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Objects,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AABBGetter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MortonCodeCalculator,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputBackInserter&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">MUDA_HOST<sp/>uint32_t<sp/>query(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmuda_1_1lbvh_1_1_b_v_h" kindref="compound">BVH&lt;Real, Objects, AABBGetter, MortonCodeCalculator&gt;</ref>&amp;<sp/>tree,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmuda_1_1lbvh_1_1query__overlap" kindref="compound">query_overlap&lt;Real&gt;</ref><sp/>q,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputBackInserter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outiter)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">bvh_type<sp/><sp/><sp/>=<sp/><ref refid="classmuda_1_1lbvh_1_1_b_v_h" kindref="compound">BVH&lt;Real, Objects, AABBGetter, MortonCodeCalculator&gt;</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">index_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bvh_type::index_type;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">aabb_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bvh_type::aabb_type;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">node_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bvh_type::node_type;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::size_t&gt;<sp/>stack;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>stack.reserve(64);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>stack.push_back(0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>num_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_type<sp/>node<sp/>=<sp/>stack.back();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.pop_back();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_type<sp/>L_idx<sp/>=<sp/>tree.host_nodes()[node].left_idx;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_type<sp/>R_idx<sp/>=<sp/>tree.host_nodes()[node].right_idx;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(intersects(q.target,<sp/>tree.host_aabbs()[L_idx]))</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>obj_idx<sp/>=<sp/>tree.host_nodes()[L_idx].object_idx;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj_idx<sp/>!=<sp/>0xFFFFFFFF)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outiter++<sp/>=<sp/>obj_idx;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_found;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>node<sp/>is<sp/>not<sp/>a<sp/>leaf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.push_back(L_idx);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(intersects(q.target,<sp/>tree.host_aabbs()[R_idx]))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>obj_idx<sp/>=<sp/>tree.host_nodes()[R_idx].object_idx;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj_idx<sp/>!=<sp/>0xFFFFFFFF)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outiter++<sp/>=<sp/>obj_idx;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_found;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>node<sp/>is<sp/>not<sp/>a<sp/>leaf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.push_back(R_idx);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!stack.empty());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_found;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Real,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Objects,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AABBGetter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MortonCodeCalculator,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DistanceCalculator&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">MUDA_HOST<sp/>std::pair&lt;uint32_t,<sp/>Real&gt;<sp/>query(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmuda_1_1lbvh_1_1_b_v_h" kindref="compound">BVH&lt;Real, Objects, AABBGetter, MortonCodeCalculator&gt;</ref>&amp;<sp/>tree,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmuda_1_1lbvh_1_1query__nearest" kindref="compound">query_nearest&lt;Real&gt;</ref>&amp;<sp/>q,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DistanceCalculator<sp/>calc_dist)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">bvh_type<sp/><sp/><sp/>=<sp/><ref refid="classmuda_1_1lbvh_1_1_b_v_h" kindref="compound">BVH&lt;Real, Objects, AABBGetter, MortonCodeCalculator&gt;</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">real_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bvh_type::real_type;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">index_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bvh_type::index_type;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">aabb_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bvh_type::aabb_type;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">node_type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>bvh_type::node_type;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(!tree.query_host_enabled())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(&quot;lbvh::bvh<sp/>query_host<sp/>is<sp/>not<sp/>enabled&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pair<sp/>of<sp/>{node_idx,<sp/>mindist}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;index_type,<sp/>real_type&gt;&gt;<sp/>stack<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>mindist(tree.host_aabbs()[0],<sp/>q.target)}};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>stack.reserve(64);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/>nearest<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>current_nearest_dist<sp/>=<sp/>infinity&lt;real_type&gt;();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>=<sp/>stack.back();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.pop_back();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(node.second<sp/>&gt;<sp/>current_nearest_dist)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>aabb<sp/>mindist<sp/>&gt;<sp/>already_found_mindist,<sp/>it<sp/>cannot<sp/>have<sp/>a<sp/>nearest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_type<sp/>L_idx<sp/>=<sp/>tree.host_nodes()[node.first].left_idx;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_type<sp/>R_idx<sp/>=<sp/>tree.host_nodes()[node.first].right_idx;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>aabb_type&amp;<sp/>L_box<sp/>=<sp/>tree.host_aabbs()[L_idx];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>aabb_type&amp;<sp/>R_box<sp/>=<sp/>tree.host_aabbs()[R_idx];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real_type<sp/>L_mindist<sp/>=<sp/>mindist(L_box,<sp/>q.target);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real_type<sp/>R_mindist<sp/>=<sp/>mindist(R_box,<sp/>q.target);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real_type<sp/>L_minmaxdist<sp/>=<sp/>minmaxdist(L_box,<sp/>q.target);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real_type<sp/>R_minmaxdist<sp/>=<sp/>minmaxdist(R_box,<sp/>q.target);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>should<sp/>be<sp/>an<sp/>object<sp/>that<sp/>locates<sp/>within<sp/>minmaxdist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(L_mindist<sp/>&lt;=<sp/>R_minmaxdist)<sp/><sp/></highlight><highlight class="comment">//<sp/>L<sp/>is<sp/>worth<sp/>considering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>obj_idx<sp/>=<sp/>tree.host_nodes()[L_idx].object_idx;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj_idx<sp/>!=<sp/>0xFFFFFFFF)<sp/><sp/></highlight><highlight class="comment">//<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real_type<sp/>dist<sp/>=<sp/>calc_dist(q.target,<sp/>tree.objects_host()[obj_idx]);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dist<sp/>&lt;=<sp/>current_nearest_dist)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_nearest_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearest<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>obj_idx;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.emplace_back(L_idx,<sp/>L_mindist);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(R_mindist<sp/>&lt;=<sp/>L_minmaxdist)<sp/><sp/></highlight><highlight class="comment">//<sp/>R<sp/>is<sp/>worth<sp/>considering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>obj_idx<sp/>=<sp/>tree.host_nodes()[R_idx].object_idx;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj_idx<sp/>!=<sp/>0xFFFFFFFF)<sp/><sp/></highlight><highlight class="comment">//<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>real_type<sp/>dist<sp/>=<sp/>calc_dist(q.target,<sp/>tree.objects_host()[obj_idx]);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dist<sp/>&lt;=<sp/>current_nearest_dist)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_nearest_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearest<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>obj_idx;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack.emplace_back(R_idx,<sp/>R_mindist);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!stack.empty());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(nearest,<sp/>current_nearest_dist);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>muda::lbvh</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/muda/ext/geo/lbvh/query.h"/>
  </compounddef>
</doxygen>

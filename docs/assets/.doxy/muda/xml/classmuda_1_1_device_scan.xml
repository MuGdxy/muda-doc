<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.1" xml:lang="en-US">
  <compounddef id="classmuda_1_1_device_scan" kind="class" language="C++" prot="public">
    <compoundname>muda::DeviceScan</compoundname>
    <basecompoundref refid="classmuda_1_1_cub_wrapper" prot="public" virt="non-virtual">muda::CubWrapper&lt; DeviceScan &gt;</basecompoundref>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmuda_1_1_device_scan_1adacc768ec4daeca0100b3ef998ca8977" prot="private" static="no">
        <type><ref refid="classmuda_1_1_cub_wrapper" kindref="compound">CubWrapper</ref>&lt; <ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &gt;</type>
        <definition>using muda::DeviceScan::Base =  CubWrapper&lt;DeviceScan&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>muda::DeviceScan::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="22" column="5" bodyfile="src/muda/cub/device/device_scan.h" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1_device_scan_1a411aad147cf099d92c1b3cc1ceb95d6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveSum</definition>
        <argsstring>(InputIteratorT d_in, OutputIteratorT d_out, int num_items)</argsstring>
        <name>ExclusiveSum</name>
        <qualifiedname>muda::DeviceScan::ExclusiveSum</qualifiedname>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="28" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1ac003f47783f78e95e5f543932be8b220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
          <param>
            <type>typename InitValueT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveScan</definition>
        <argsstring>(InputIteratorT d_in, OutputIteratorT d_out, ScanOpT scan_op, InitValueT init_value, int num_items)</argsstring>
        <name>ExclusiveScan</name>
        <qualifiedname>muda::DeviceScan::ExclusiveScan</qualifiedname>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>InitValueT</type>
          <declname>init_value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="36" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="36" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1ad24aa23b74586f07a3dfb9411f18cd6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveSum</definition>
        <argsstring>(InputIteratorT d_in, OutputIteratorT d_out, int num_items)</argsstring>
        <name>InclusiveSum</name>
        <qualifiedname>muda::DeviceScan::InclusiveSum</qualifiedname>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="48" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1ab6601439f95021ae1287d14a738013ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveScan</definition>
        <argsstring>(InputIteratorT d_in, OutputIteratorT d_out, ScanOpT scan_op, int num_items)</argsstring>
        <name>InclusiveScan</name>
        <qualifiedname>muda::DeviceScan::InclusiveScan</qualifiedname>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="55" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1af03619f930f464d719e161e0644cd3b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveSumByKey</definition>
        <argsstring>(KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>ExclusiveSumByKey</name>
        <qualifiedname>muda::DeviceScan::ExclusiveSumByKey</qualifiedname>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="62" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="62" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1a2ca9dfe81d9c67f6714e72b7fd042a84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
          <param>
            <type>typename InitValueT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveScanByKey</definition>
        <argsstring>(KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, ScanOpT scan_op, InitValueT init_value, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>ExclusiveScanByKey</name>
        <qualifiedname>muda::DeviceScan::ExclusiveScanByKey</qualifiedname>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>InitValueT</type>
          <declname>init_value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="73" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="73" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1a054a83d842f3e77362a0d9e98f311e84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveSumByKey</definition>
        <argsstring>(KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>InclusiveSumByKey</name>
        <qualifiedname>muda::DeviceScan::InclusiveSumByKey</qualifiedname>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="95" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1ac2ddc338334c5ccb07f3ce34de9c2899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveScanByKey</definition>
        <argsstring>(KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, ScanOpT scan_op, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>InclusiveScanByKey</name>
        <qualifiedname>muda::DeviceScan::InclusiveScanByKey</qualifiedname>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="106" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="106" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1ababbd29099f807f39a48fb748776195e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveSum</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_in, OutputIteratorT d_out, int num_items)</argsstring>
        <name>ExclusiveSum</name>
        <qualifiedname>muda::DeviceScan::ExclusiveSum</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="128" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="128" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1ae7ef1b7283faf1e83ad588f686851b8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
          <param>
            <type>typename InitValueT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveScan</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_in, OutputIteratorT d_out, ScanOpT scan_op, InitValueT init_value, int num_items)</argsstring>
        <name>ExclusiveScan</name>
        <qualifiedname>muda::DeviceScan::ExclusiveScan</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>InitValueT</type>
          <declname>init_value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="140" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="140" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1af96733ec30dcd962cc46416d16ce533f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveSum</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_in, OutputIteratorT d_out, int num_items)</argsstring>
        <name>InclusiveSum</name>
        <qualifiedname>muda::DeviceScan::InclusiveSum</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="154" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="154" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1a5c3a618c84b26899e125a8ff60ffe45f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIteratorT</type>
          </param>
          <param>
            <type>typename OutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveScan</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_in, OutputIteratorT d_out, ScanOpT scan_op, int num_items)</argsstring>
        <name>InclusiveScan</name>
        <qualifiedname>muda::DeviceScan::InclusiveScan</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>InputIteratorT</type>
          <declname>d_in</declname>
        </param>
        <param>
          <type>OutputIteratorT</type>
          <declname>d_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="165" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="165" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1a54a33f14c44ecd79a6144530f29ea3cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveSumByKey</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>ExclusiveSumByKey</name>
        <qualifiedname>muda::DeviceScan::ExclusiveSumByKey</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="177" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="177" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1ac4a87e5b563df935c57b1f77ba162e69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
          <param>
            <type>typename InitValueT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::ExclusiveScanByKey</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, ScanOpT scan_op, InitValueT init_value, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>ExclusiveScanByKey</name>
        <qualifiedname>muda::DeviceScan::ExclusiveScanByKey</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>InitValueT</type>
          <declname>init_value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="190" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="190" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1a8105d5b0cc79030375d0eae5a4f11341" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveSumByKey</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>InclusiveSumByKey</name>
        <qualifiedname>muda::DeviceScan::InclusiveSumByKey</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="215" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="215" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_scan_1a81d396d9fd5ef0dfa8c34fe9e05bc5e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeysInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesInputIteratorT</type>
          </param>
          <param>
            <type>typename ValuesOutputIteratorT</type>
          </param>
          <param>
            <type>typename ScanOpT</type>
          </param>
          <param>
            <type>typename EqualityOpT</type>
            <defval>cub::Equality</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classmuda_1_1_device_scan" kindref="compound">DeviceScan</ref> &amp;</type>
        <definition>DeviceScan &amp; muda::DeviceScan::InclusiveScanByKey</definition>
        <argsstring>(void *d_temp_storage, size_t &amp;temp_storage_bytes, KeysInputIteratorT d_keys_in, ValuesInputIteratorT d_values_in, ValuesOutputIteratorT d_values_out, ScanOpT scan_op, int num_items, EqualityOpT equality_op=EqualityOpT())</argsstring>
        <name>InclusiveScanByKey</name>
        <qualifiedname>muda::DeviceScan::InclusiveScanByKey</qualifiedname>
        <param>
          <type>void *</type>
          <declname>d_temp_storage</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>temp_storage_bytes</declname>
        </param>
        <param>
          <type>KeysInputIteratorT</type>
          <declname>d_keys_in</declname>
        </param>
        <param>
          <type>ValuesInputIteratorT</type>
          <declname>d_values_in</declname>
        </param>
        <param>
          <type>ValuesOutputIteratorT</type>
          <declname>d_values_out</declname>
        </param>
        <param>
          <type>ScanOpT</type>
          <declname>scan_op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_items</declname>
        </param>
        <param>
          <type>EqualityOpT</type>
          <declname>equality_op</declname>
          <defval>EqualityOpT()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/cub/device/device_scan.h" line="228" column="16" bodyfile="src/muda/cub/device/device_scan.h" bodystart="228" bodyend="239"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>muda::CubWrapper&lt; DeviceScan &gt;</label>
        <link refid="classmuda_1_1_cub_wrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>muda::DeviceScan</label>
        <link refid="classmuda_1_1_device_scan"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>muda::LaunchBase&lt; T &gt;</label>
        <link refid="classmuda_1_1_launch_base"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>muda::LaunchCore</label>
        <link refid="classmuda_1_1_launch_core"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>muda::CubWrapper&lt; DeviceScan &gt;</label>
        <link refid="classmuda_1_1_cub_wrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>muda::DeviceScan</label>
        <link refid="classmuda_1_1_device_scan"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>muda::LaunchBase&lt; T &gt;</label>
        <link refid="classmuda_1_1_launch_base"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>muda::LaunchCore</label>
        <link refid="classmuda_1_1_launch_core"/>
      </node>
    </collaborationgraph>
    <location file="src/muda/cub/device/device_scan.h" line="20" column="1" bodyfile="src/muda/cub/device/device_scan.h" bodystart="21" bodyend="240"/>
    <listofallmembers>
      <member refid="classmuda_1_1_device_scan_1adacc768ec4daeca0100b3ef998ca8977" prot="private" virt="non-virtual"><scope>muda::DeviceScan</scope><name>Base</name></member>
      <member refid="classmuda_1_1_launch_base_1aa8490139890f43555c1b7baa57378616" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>callback</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a846ad2ff72dccee396a542f1ec0b4aeb" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>CubWrapper</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a846ad2ff72dccee396a542f1ec0b4aeb" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>CubWrapper</name></member>
      <member refid="classmuda_1_1_launch_base_1a8a59e9a27775e4e12ca19a6d590790f4" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>derived_type</name></member>
      <member refid="classmuda_1_1_device_scan_1ac003f47783f78e95e5f543932be8b220" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveScan</name></member>
      <member refid="classmuda_1_1_device_scan_1ae7ef1b7283faf1e83ad588f686851b8c" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveScan</name></member>
      <member refid="classmuda_1_1_device_scan_1a2ca9dfe81d9c67f6714e72b7fd042a84" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveScanByKey</name></member>
      <member refid="classmuda_1_1_device_scan_1ac4a87e5b563df935c57b1f77ba162e69" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveScanByKey</name></member>
      <member refid="classmuda_1_1_device_scan_1a411aad147cf099d92c1b3cc1ceb95d6e" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveSum</name></member>
      <member refid="classmuda_1_1_device_scan_1ababbd29099f807f39a48fb748776195e" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveSum</name></member>
      <member refid="classmuda_1_1_device_scan_1af03619f930f464d719e161e0644cd3b5" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveSumByKey</name></member>
      <member refid="classmuda_1_1_device_scan_1a54a33f14c44ecd79a6144530f29ea3cb" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>ExclusiveSumByKey</name></member>
      <member refid="classmuda_1_1_launch_base_1aee4564eac54df98ab98085379370a2ec" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>file_line</name></member>
      <member refid="classmuda_1_1_device_scan_1ab6601439f95021ae1287d14a738013ff" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveScan</name></member>
      <member refid="classmuda_1_1_device_scan_1a5c3a618c84b26899e125a8ff60ffe45f" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveScan</name></member>
      <member refid="classmuda_1_1_device_scan_1ac2ddc338334c5ccb07f3ce34de9c2899" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveScanByKey</name></member>
      <member refid="classmuda_1_1_device_scan_1a81d396d9fd5ef0dfa8c34fe9e05bc5e2" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveScanByKey</name></member>
      <member refid="classmuda_1_1_device_scan_1ad24aa23b74586f07a3dfb9411f18cd6b" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveSum</name></member>
      <member refid="classmuda_1_1_device_scan_1af96733ec30dcd962cc46416d16ce533f" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveSum</name></member>
      <member refid="classmuda_1_1_device_scan_1a054a83d842f3e77362a0d9e98f311e84" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveSumByKey</name></member>
      <member refid="classmuda_1_1_device_scan_1a8105d5b0cc79030375d0eae5a4f11341" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>InclusiveSumByKey</name></member>
      <member refid="classmuda_1_1_launch_core_1a38c542a99edea149552d82639e385ab5" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>init_stream</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a71f741726d4ab894c196264043bd2922" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>kernel_name</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a71f741726d4ab894c196264043bd2922" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>kernel_name</name></member>
      <member refid="classmuda_1_1_launch_base_1ab73495b0bfa3a7a1864284aebceb51a8" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>LaunchBase</name></member>
      <member refid="classmuda_1_1_launch_core_1a8503eff885f818a12319ca57dfd75011" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>LaunchCore</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a5e0f31303ea2f56ba4cfe04fb2ca7738" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>m_muda_stream</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1a5e0f31303ea2f56ba4cfe04fb2ca7738" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>m_muda_stream</name></member>
      <member refid="classmuda_1_1_launch_core_1a3b5544456087d57904981118c4cdcaf8" prot="protected" virt="non-virtual"><scope>muda::DeviceScan</scope><name>m_stream</name></member>
      <member refid="classmuda_1_1_launch_base_1a395b0a10fee3bf2c591f49a3119df1b8" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>next</name></member>
      <member refid="classmuda_1_1_launch_base_1a841db3ede786d3312a6ca2de2139ad10" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>next</name></member>
      <member refid="classmuda_1_1_launch_base_1a65538f7d445fa3cc56ab33e609fe566a" prot="protected" virt="non-virtual"><scope>muda::DeviceScan</scope><name>pop_kernel_label</name></member>
      <member refid="classmuda_1_1_launch_base_1ab6b75621024e7977edcdff26c04bcdc1" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>pop_range</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1af1007ebfdee88f21fd67283499730991" prot="protected" virt="non-virtual"><scope>muda::DeviceScan</scope><name>prepare_buffer</name></member>
      <member refid="classmuda_1_1_cub_wrapper_1af1007ebfdee88f21fd67283499730991" prot="protected" virt="non-virtual"><scope>muda::DeviceScan</scope><name>prepare_buffer</name></member>
      <member refid="classmuda_1_1_launch_base_1ad6dcaaf3ea0726809ebbdb10084c3183" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>push_range</name></member>
      <member refid="classmuda_1_1_launch_base_1ad069d4ad6219f5a3b51e7c8d9e4d596f" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>record</name></member>
      <member refid="classmuda_1_1_launch_base_1a12cf6b18c76787654460c1c043907547" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>record</name></member>
      <member refid="classmuda_1_1_launch_base_1a77d57b9368424d70cd740af6eaf45a6f" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>record</name></member>
      <member refid="classmuda_1_1_launch_core_1a8aeb9e37d421f835e0fcae124e3ce0de" prot="protected" virt="non-virtual"><scope>muda::DeviceScan</scope><name>S</name></member>
      <member refid="classmuda_1_1_launch_core_1ab78b991329337c97d2ac3e32e995a62f" prot="protected" virt="non-virtual"><scope>muda::DeviceScan</scope><name>stream</name></member>
      <member refid="classmuda_1_1_launch_base_1a88cbf9478fbeaa7434ece7f300dc1c0e" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_base_1ab0fc5fbed4ec5f69a3b599af99900d98" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_base_1acbf042e86efae1683e2ab08c95095da7" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_base_1abe061bff24568f9c2fcf326a62843292" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>wait</name></member>
      <member refid="classmuda_1_1_launch_core_1a58e970f699c546d37c70af9bb4d3a93c" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>wait_device</name></member>
      <member refid="classmuda_1_1_launch_core_1a7b29e878817d4e42bc533edc0c89b645" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>wait_event</name></member>
      <member refid="classmuda_1_1_launch_core_1a73d5d54a7b3b59dcf8eea792e796337b" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>wait_stream</name></member>
      <member refid="classmuda_1_1_launch_base_1a59a525fea511ea1c90f5857be5d62d43" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>when</name></member>
      <member refid="classmuda_1_1_launch_base_1a543548ac0516b2c10adba68d2ae7066b" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>~LaunchBase</name></member>
      <member refid="classmuda_1_1_launch_core_1a5e4ae3435bce9d4ad706b5e347a3040f" prot="public" virt="non-virtual"><scope>muda::DeviceScan</scope><name>~LaunchCore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

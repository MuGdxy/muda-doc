<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmuda_1_1_device_vector" kind="class" language="C++" prot="public">
    <compoundname>muda::DeviceVector</compoundname>
    <basecompoundref prot="public" virt="non-virtual">thrust::device_vector&lt; T, thrust::device_allocator&lt; T &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmuda_1_1_device_vector_1a637168df624350bedd315e27144690cd" prot="public" static="no">
        <type>thrust::device_vector&lt; T, thrust::device_allocator&lt; T &gt; &gt;</type>
        <definition>using muda::DeviceVector&lt; T &gt;::Base =  thrust::device_vector&lt;T, thrust::device_allocator&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>muda::DeviceVector::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="25" column="5" bodyfile="src/muda/container/vector.h" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a1abc781f55e13f3ebd2d8f3919798f1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceVector&lt; T &gt;::view</definition>
        <argsstring>() MUDA_NOEXCEPT</argsstring>
        <name>view</name>
        <qualifiedname>muda::DeviceVector::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="29" column="10" bodyfile="src/muda/container/vector.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a7713b1c6b9fa2ffeee3b6d5380c76cdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceVector&lt; T &gt;::view</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>view</name>
        <qualifiedname>muda::DeviceVector::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="31" column="10" bodyfile="src/muda/container/vector.h" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a4027338e9f9a58f3b9b907ab4d78dc49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceVector&lt; T &gt;::operator BufferView&lt; T &gt;</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>operator BufferView&lt; T &gt;</name>
        <qualifiedname>muda::DeviceVector::operator BufferView&lt; T &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="36" column="5" bodyfile="src/muda/container/vector.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a85c5e1e91dfcccc122f1acf7b33ef3fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceVector&lt; T &gt;::operator CBufferView&lt; T &gt;</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>operator CBufferView&lt; T &gt;</name>
        <qualifiedname>muda::DeviceVector::operator CBufferView&lt; T &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="37" column="5" bodyfile="src/muda/container/vector.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1ace2d609bd0a61ab3da3a35a74deedf3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_device_vector" kindref="compound">DeviceVector</ref> &amp;</type>
        <definition>DeviceVector &amp; muda::DeviceVector&lt; T &gt;::operator=</definition>
        <argsstring>(CBufferView&lt; T &gt; v)</argsstring>
        <name>operator=</name>
        <qualifiedname>muda::DeviceVector::operator=</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_buffer_view_t" kindref="compound">CBufferView</ref>&lt; T &gt;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="39" column="18" bodyfile="src/muda/container/vector.h" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a6af7fa5efa0e91d25771fdf6273c9f03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceVector&lt; T &gt;::copy_to</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;v) const</argsstring>
        <name>copy_to</name>
        <qualifiedname>muda::DeviceVector::copy_to</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="46" column="10" bodyfile="src/muda/container/vector.h" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a2940f77d6e7fc2bdb00bc6a2a24095de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceVector&lt; T &gt;::viewer</definition>
        <argsstring>() MUDA_NOEXCEPT</argsstring>
        <name>viewer</name>
        <qualifiedname>muda::DeviceVector::viewer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="52" column="10" bodyfile="src/muda/container/vector.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a78ac9204ecb6e9acc90eb020b5fb5e4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceVector&lt; T &gt;::cviewer</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>cviewer</name>
        <qualifiedname>muda::DeviceVector::cviewer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="57" column="10" bodyfile="src/muda/container/vector.h" bodystart="57" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classmuda_1_1_device_vector_1a5335b5d1fca413398b1d4008b7c370b3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * muda::DeviceVector&lt; T &gt;::raw_ptr</definition>
        <argsstring>()</argsstring>
        <name>raw_ptr</name>
        <qualifiedname>muda::DeviceVector::raw_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="63" column="13" bodyfile="src/muda/container/vector.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_vector_1ae493048fd568980abb4769803a50a3ae" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T * muda::DeviceVector&lt; T &gt;::raw_ptr</definition>
        <argsstring>() const</argsstring>
        <name>raw_ptr</name>
        <qualifiedname>muda::DeviceVector::raw_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/container/vector.h" line="64" column="13" bodyfile="src/muda/container/vector.h" bodystart="64" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>muda::DeviceVector&lt; T &gt;</label>
        <link refid="classmuda_1_1_device_vector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>thrust::device_vector&lt; T, thrust::device_allocator&lt; T &gt; &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>muda::DeviceVector&lt; T &gt;</label>
        <link refid="classmuda_1_1_device_vector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>thrust::device_vector&lt; T, thrust::device_allocator&lt; T &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="src/muda/container/vector.h" line="22" column="1" bodyfile="src/muda/container/vector.h" bodystart="23" bodyend="65"/>
    <listofallmembers>
      <member refid="classmuda_1_1_device_vector_1a637168df624350bedd315e27144690cd" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>Base</name></member>
      <member refid="classmuda_1_1_device_vector_1a6af7fa5efa0e91d25771fdf6273c9f03" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>copy_to</name></member>
      <member refid="classmuda_1_1_device_vector_1a78ac9204ecb6e9acc90eb020b5fb5e4f" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>cviewer</name></member>
      <member refid="classmuda_1_1_device_vector_1a4027338e9f9a58f3b9b907ab4d78dc49" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>operator BufferView&lt; T &gt;</name></member>
      <member refid="classmuda_1_1_device_vector_1a85c5e1e91dfcccc122f1acf7b33ef3fc" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>operator CBufferView&lt; T &gt;</name></member>
      <member refid="classmuda_1_1_device_vector_1ace2d609bd0a61ab3da3a35a74deedf3e" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>operator=</name></member>
      <member refid="classmuda_1_1_device_vector_1a5335b5d1fca413398b1d4008b7c370b3" prot="private" virt="non-virtual"><scope>muda::DeviceVector</scope><name>raw_ptr</name></member>
      <member refid="classmuda_1_1_device_vector_1ae493048fd568980abb4769803a50a3ae" prot="private" virt="non-virtual"><scope>muda::DeviceVector</scope><name>raw_ptr</name></member>
      <member refid="classmuda_1_1_device_vector_1a1abc781f55e13f3ebd2d8f3919798f1a" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>view</name></member>
      <member refid="classmuda_1_1_device_vector_1a7713b1c6b9fa2ffeee3b6d5380c76cdd" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>view</name></member>
      <member refid="classmuda_1_1_device_vector_1a2940f77d6e7fc2bdb00bc6a2a24095de" prot="public" virt="non-virtual"><scope>muda::DeviceVector</scope><name>viewer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

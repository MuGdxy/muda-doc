<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.1" xml:lang="en-US">
  <compounddef id="classmuda_1_1cuda__error" kind="class" language="C++" prot="public">
    <compoundname>muda::cuda_error</compoundname>
    <basecompoundref refid="classmuda_1_1exception" prot="public" virt="non-virtual">muda::exception</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
        <defval>cudaError_t</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmuda_1_1cuda__error_1a226e2c1975ff8bd9940eeebbb9e78e3e" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T muda::cuda_error&lt; T &gt;::m_error</definition>
        <argsstring></argsstring>
        <name>m_error</name>
        <qualifiedname>muda::cuda_error::m_error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="28" column="17" bodyfile="src/muda/check/check.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1cuda__error_1abfce16f24026b436922c5891c37380cd" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string muda::cuda_error&lt; T &gt;::m_error_string</definition>
        <argsstring></argsstring>
        <name>m_error_string</name>
        <qualifiedname>muda::cuda_error::m_error_string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="29" column="17" bodyfile="src/muda/check/check.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1cuda__error_1a657a84473c3c7949d4d5030b5e184614" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string muda::cuda_error&lt; T &gt;::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <qualifiedname>muda::cuda_error::m_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="30" column="17" bodyfile="src/muda/check/check.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1cuda__error_1a8fcd2d7ee44af326887dd92e4ef249c3" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t muda::cuda_error&lt; T &gt;::m_line</definition>
        <argsstring></argsstring>
        <name>m_line</name>
        <qualifiedname>muda::cuda_error::m_line</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="32" column="17" bodyfile="src/muda/check/check.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1cuda__error_1ae76ab59e546ba7a3cfffa7b6e29bfdf1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string muda::cuda_error&lt; T &gt;::m_func</definition>
        <argsstring></argsstring>
        <name>m_func</name>
        <qualifiedname>muda::cuda_error::m_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="33" column="17" bodyfile="src/muda/check/check.h" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1cuda__error_1a8d3bc0ec884671461bc0f3622a5bfeb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::cuda_error&lt; T &gt;::cuda_error</definition>
        <argsstring>(T error, std::string error_string, const std::string &amp;file, size_t line, const std::string &amp;func)</argsstring>
        <name>cuda_error</name>
        <qualifiedname>muda::cuda_error::cuda_error</qualifiedname>
        <param>
          <type>T</type>
          <declname>error</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>error_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="36" column="5" bodyfile="src/muda/check/check.h" bodystart="36" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1cuda__error_1ac68c2b31537fe5554034aac0ad71602a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T muda::cuda_error&lt; T &gt;::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <qualifiedname>muda::cuda_error::error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="47" column="24" bodyfile="src/muda/check/check.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1cuda__error_1a92909017a9db31c2b3efc7b9bee7e6f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; muda::cuda_error&lt; T &gt;::error_string</definition>
        <argsstring>() const</argsstring>
        <name>error_string</name>
        <qualifiedname>muda::cuda_error::error_string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="48" column="23" bodyfile="src/muda/check/check.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1cuda__error_1a352a46f9d340186f8b34e4aae6241413" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; muda::cuda_error&lt; T &gt;::file</definition>
        <argsstring>() const</argsstring>
        <name>file</name>
        <qualifiedname>muda::cuda_error::file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="49" column="23" bodyfile="src/muda/check/check.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1cuda__error_1ae771cffd7dfd8c6e7562a1fa3e793eac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t muda::cuda_error&lt; T &gt;::line</definition>
        <argsstring>() const</argsstring>
        <name>line</name>
        <qualifiedname>muda::cuda_error::line</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="50" column="24" bodyfile="src/muda/check/check.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1cuda__error_1ab896721d5d4ca4e2898a42395a85762e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; muda::cuda_error&lt; T &gt;::func</definition>
        <argsstring>() const</argsstring>
        <name>func</name>
        <qualifiedname>muda::cuda_error::func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/check/check.h" line="51" column="23" bodyfile="src/muda/check/check.h" bodystart="51" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>muda::cuda_error&lt; T &gt;</label>
        <link refid="classmuda_1_1cuda__error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::exception</label>
        <link refid="classmuda_1_1exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>muda::cuda_error&lt; T &gt;</label>
        <link refid="classmuda_1_1cuda__error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::exception</label>
        <link refid="classmuda_1_1exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="src/muda/check/check.h" line="26" column="1" bodyfile="src/muda/check/check.h" bodystart="27" bodyend="52"/>
    <listofallmembers>
      <member refid="classmuda_1_1cuda__error_1a8d3bc0ec884671461bc0f3622a5bfeb9" prot="public" virt="non-virtual"><scope>muda::cuda_error</scope><name>cuda_error</name></member>
      <member refid="classmuda_1_1cuda__error_1ac68c2b31537fe5554034aac0ad71602a" prot="public" virt="non-virtual"><scope>muda::cuda_error</scope><name>error</name></member>
      <member refid="classmuda_1_1cuda__error_1a92909017a9db31c2b3efc7b9bee7e6f2" prot="public" virt="non-virtual"><scope>muda::cuda_error</scope><name>error_string</name></member>
      <member refid="classmuda_1_1exception_1abd6be2026b5f7cd10bb31b6d92818e43" prot="public" virt="non-virtual"><scope>muda::cuda_error</scope><name>exception</name></member>
      <member refid="classmuda_1_1cuda__error_1a352a46f9d340186f8b34e4aae6241413" prot="public" virt="non-virtual"><scope>muda::cuda_error</scope><name>file</name></member>
      <member refid="classmuda_1_1cuda__error_1ab896721d5d4ca4e2898a42395a85762e" prot="public" virt="non-virtual"><scope>muda::cuda_error</scope><name>func</name></member>
      <member refid="classmuda_1_1cuda__error_1ae771cffd7dfd8c6e7562a1fa3e793eac" prot="public" virt="non-virtual"><scope>muda::cuda_error</scope><name>line</name></member>
      <member refid="classmuda_1_1cuda__error_1a226e2c1975ff8bd9940eeebbb9e78e3e" prot="private" virt="non-virtual"><scope>muda::cuda_error</scope><name>m_error</name></member>
      <member refid="classmuda_1_1cuda__error_1abfce16f24026b436922c5891c37380cd" prot="private" virt="non-virtual"><scope>muda::cuda_error</scope><name>m_error_string</name></member>
      <member refid="classmuda_1_1cuda__error_1a657a84473c3c7949d4d5030b5e184614" prot="private" virt="non-virtual"><scope>muda::cuda_error</scope><name>m_file</name></member>
      <member refid="classmuda_1_1cuda__error_1ae76ab59e546ba7a3cfffa7b6e29bfdf1" prot="private" virt="non-virtual"><scope>muda::cuda_error</scope><name>m_func</name></member>
      <member refid="classmuda_1_1cuda__error_1a8fcd2d7ee44af326887dd92e4ef249c3" prot="private" virt="non-virtual"><scope>muda::cuda_error</scope><name>m_line</name></member>
      <member refid="classmuda_1_1exception_1a60519375d5b3d21ea5c2a70cdc1f51bd" prot="public" virt="virtual"><scope>muda::cuda_error</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmuda_1_1_device_buffer3_d" kind="class" language="C++" prot="public">
    <compoundname>muda::DeviceBuffer3D</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmuda_1_1_device_buffer3_d_1a357b48ccc3c823e53d940270911a01a1" prot="public" static="no">
        <type>T</type>
        <definition>using muda::DeviceBuffer3D&lt; T &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>muda::DeviceBuffer3D::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="35" column="5" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classmuda_1_1_device_buffer3_d_1a3373c2e8cf6a6172637baf3c12d153ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BufferLaunch</definition>
        <argsstring></argsstring>
        <name>BufferLaunch</name>
        <qualifiedname>muda::DeviceBuffer3D::BufferLaunch</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_buffer_launch" kindref="compound">BufferLaunch</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="25" column="18" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmuda_1_1_device_buffer3_d_1a3da08685fa6b7d2236b99a33da67b81a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class NDReshaper</definition>
        <argsstring></argsstring>
        <name>NDReshaper</name>
        <qualifiedname>muda::DeviceBuffer3D::NDReshaper</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_n_d_reshaper" kindref="compound">NDReshaper</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="26" column="18" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmuda_1_1_device_buffer3_d_1af308f0a1bd788faf4efa7baade5f480e" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* muda::DeviceBuffer3D&lt; T &gt;::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <qualifiedname>muda::DeviceBuffer3D::m_data</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="28" column="13" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1_device_buffer3_d_1a5258262a571bdf6030850b6500f56aaa" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t muda::DeviceBuffer3D&lt; T &gt;::m_pitch_bytes</definition>
        <argsstring></argsstring>
        <name>m_pitch_bytes</name>
        <qualifiedname>muda::DeviceBuffer3D::m_pitch_bytes</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="29" column="14" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1_device_buffer3_d_1ab6bed4f6ccb0ea9483b5c0ccadba7e23" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t muda::DeviceBuffer3D&lt; T &gt;::m_pitch_bytes_area</definition>
        <argsstring></argsstring>
        <name>m_pitch_bytes_area</name>
        <qualifiedname>muda::DeviceBuffer3D::m_pitch_bytes_area</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="30" column="14" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1_device_buffer3_d_1af9f24795df50c1173ba2c7ef7b1f719c" prot="private" static="no" mutable="no">
        <type><ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref></type>
        <definition>Extent3D muda::DeviceBuffer3D&lt; T &gt;::m_extent</definition>
        <argsstring></argsstring>
        <name>m_extent</name>
        <qualifiedname>muda::DeviceBuffer3D::m_extent</qualifiedname>
        <initializer>= Extent3D::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="31" column="14" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1_device_buffer3_d_1ab502aa211bf510eeb62c50b1b978f705" prot="private" static="no" mutable="no">
        <type><ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref></type>
        <definition>Extent3D muda::DeviceBuffer3D&lt; T &gt;::m_capacity</definition>
        <argsstring></argsstring>
        <name>m_capacity</name>
        <qualifiedname>muda::DeviceBuffer3D::m_capacity</qualifiedname>
        <initializer>= Extent3D::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="32" column="14" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1af17685a3a6f00468274e3cfe5f0f53b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::DeviceBuffer3D</definition>
        <argsstring>(const Extent3D &amp;n)</argsstring>
        <name>DeviceBuffer3D</name>
        <qualifiedname>muda::DeviceBuffer3D::DeviceBuffer3D</qualifiedname>
        <param>
          <type>const <ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1abc7d0a6b1812b619cb84fd4bad70b2b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::DeviceBuffer3D</definition>
        <argsstring>()</argsstring>
        <name>DeviceBuffer3D</name>
        <qualifiedname>muda::DeviceBuffer3D::DeviceBuffer3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="38" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1ac58f7e58f3b9d193c46b98a1c3a9e486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::DeviceBuffer3D</definition>
        <argsstring>(const DeviceBuffer3D&lt; T &gt; &amp;other)</argsstring>
        <name>DeviceBuffer3D</name>
        <qualifiedname>muda::DeviceBuffer3D::DeviceBuffer3D</qualifiedname>
        <param>
          <type>const <ref refid="classmuda_1_1_device_buffer3_d" kindref="compound">DeviceBuffer3D</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a82d1b7dcb679cde832f3c828d611547c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::DeviceBuffer3D</definition>
        <argsstring>(DeviceBuffer3D &amp;&amp;other) MUDA_NOEXCEPT</argsstring>
        <name>DeviceBuffer3D</name>
        <qualifiedname>muda::DeviceBuffer3D::DeviceBuffer3D</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_device_buffer3_d" kindref="compound">DeviceBuffer3D</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="41" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1ac71c11df315398873accc456a0130184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmuda_1_1_device_buffer3_d" kindref="compound">DeviceBuffer3D</ref> &amp;</type>
        <definition>DeviceBuffer3D &amp; muda::DeviceBuffer3D&lt; T &gt;::operator=</definition>
        <argsstring>(const DeviceBuffer3D&lt; T &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>muda::DeviceBuffer3D::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classmuda_1_1_device_buffer3_d" kindref="compound">DeviceBuffer3D</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="42" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a43916ca65742a0da00b2fd5e4e08a1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmuda_1_1_device_buffer3_d" kindref="compound">DeviceBuffer3D</ref> &amp;</type>
        <definition>DeviceBuffer3D &amp; muda::DeviceBuffer3D&lt; T &gt;::operator=</definition>
        <argsstring>(DeviceBuffer3D&lt; T &gt; &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>muda::DeviceBuffer3D::operator=</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_device_buffer3_d" kindref="compound">DeviceBuffer3D</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="43" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a2da634c9bdf31793de3b6d9c53699f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::DeviceBuffer3D</definition>
        <argsstring>(CBuffer3DView&lt; T &gt; other)</argsstring>
        <name>DeviceBuffer3D</name>
        <qualifiedname>muda::DeviceBuffer3D::DeviceBuffer3D</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_buffer3_d_view_t" kindref="compound">CBuffer3DView</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1ac6e80a5c92cdf564f8e30a53a86ae48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmuda_1_1_device_buffer3_d" kindref="compound">DeviceBuffer3D</ref> &amp;</type>
        <definition>DeviceBuffer3D &amp; muda::DeviceBuffer3D&lt; T &gt;::operator=</definition>
        <argsstring>(CBuffer3DView&lt; T &gt; other)</argsstring>
        <name>operator=</name>
        <qualifiedname>muda::DeviceBuffer3D::operator=</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_buffer3_d_view_t" kindref="compound">CBuffer3DView</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="46" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a8fb3f3d00827929b143f643120c37e82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::copy_to</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;host) const</argsstring>
        <name>copy_to</name>
        <qualifiedname>muda::DeviceBuffer3D::copy_to</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a53c428047ad8d84d108868089832a0cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::copy_from</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;host)</argsstring>
        <name>copy_from</name>
        <qualifiedname>muda::DeviceBuffer3D::copy_from</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="49" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a079a6b1fbe14f29c7deed68f5c37165b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::resize</definition>
        <argsstring>(Extent3D new_size)</argsstring>
        <name>resize</name>
        <qualifiedname>muda::DeviceBuffer3D::resize</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref></type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1ac9bb86bd0d80848759a9ad22a205da6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::resize</definition>
        <argsstring>(Extent3D new_size, const T &amp;value)</argsstring>
        <name>resize</name>
        <qualifiedname>muda::DeviceBuffer3D::resize</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref></type>
          <declname>new_size</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1ad7ad2aace7fa4d80923c36e919a4f97a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::reserve</definition>
        <argsstring>(Extent3D new_capacity)</argsstring>
        <name>reserve</name>
        <qualifiedname>muda::DeviceBuffer3D::reserve</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref></type>
          <declname>new_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a0039ce6237375baeb1cae53dafc7707e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>muda::DeviceBuffer3D::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a47e5e38569e94cff116e8e575c7097f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::shrink_to_fit</definition>
        <argsstring>()</argsstring>
        <name>shrink_to_fit</name>
        <qualifiedname>muda::DeviceBuffer3D::shrink_to_fit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="55" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1ab714660c4758e1885d4e907d16773c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::DeviceBuffer3D&lt; T &gt;::fill</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>fill</name>
        <qualifiedname>muda::DeviceBuffer3D::fill</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1acac21b7b630dc4cb359845c0dff69508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_dense3_d_base" kindref="compound">Dense3D</ref>&lt; T &gt;</type>
        <definition>Dense3D&lt; T &gt; muda::DeviceBuffer3D&lt; T &gt;::viewer</definition>
        <argsstring>() MUDA_NOEXCEPT</argsstring>
        <name>viewer</name>
        <qualifiedname>muda::DeviceBuffer3D::viewer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="58" column="14" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a97c473a7541e4ff640ae8ac3af0580fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_dense3_d_base" kindref="compound">CDense3D</ref>&lt; T &gt;</type>
        <definition>CDense3D&lt; T &gt; muda::DeviceBuffer3D&lt; T &gt;::cviewer</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>cviewer</name>
        <qualifiedname>muda::DeviceBuffer3D::cviewer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="59" column="14" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a89a53e658d4b7a9ff9c7a528e01fb5e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_buffer3_d_view_t" kindref="compound">Buffer3DView</ref>&lt; T &gt;</type>
        <definition>Buffer3DView&lt; T &gt; muda::DeviceBuffer3D&lt; T &gt;::view</definition>
        <argsstring>(Offset3D offset, Extent3D extent={}) MUDA_NOEXCEPT</argsstring>
        <name>view</name>
        <qualifiedname>muda::DeviceBuffer3D::view</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_offset3_d" kindref="compound">Offset3D</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref></type>
          <declname>extent</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="61" column="18" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a5f542db079a54ff56ba2774e5e78aabf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_buffer3_d_view_t" kindref="compound">Buffer3DView</ref>&lt; T &gt;</type>
        <definition>Buffer3DView&lt; T &gt; muda::DeviceBuffer3D&lt; T &gt;::view</definition>
        <argsstring>() MUDA_NOEXCEPT</argsstring>
        <name>view</name>
        <qualifiedname>muda::DeviceBuffer3D::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="65" column="18" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1ab49e7ce0f3e0d93d254ed02c2df2ccab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::operator Buffer3DView&lt; T &gt;</definition>
        <argsstring>() MUDA_NOEXCEPT</argsstring>
        <name>operator Buffer3DView&lt; T &gt;</name>
        <qualifiedname>muda::DeviceBuffer3D::operator Buffer3DView&lt; T &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="70" column="5" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a72dbb7ad4da9d821662ae6c1389c5160" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_buffer3_d_view_t" kindref="compound">CBuffer3DView</ref>&lt; T &gt;</type>
        <definition>CBuffer3DView&lt; T &gt; muda::DeviceBuffer3D&lt; T &gt;::view</definition>
        <argsstring>(Offset3D offset, Extent3D extent={}) const MUDA_NOEXCEPT</argsstring>
        <name>view</name>
        <qualifiedname>muda::DeviceBuffer3D::view</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_offset3_d" kindref="compound">Offset3D</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="classmuda_1_1_extent3_d" kindref="compound">Extent3D</ref></type>
          <declname>extent</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="72" column="19" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a501a1234c20b31aba19377d78d2fcbe3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_buffer3_d_view_t" kindref="compound">CBuffer3DView</ref>&lt; T &gt;</type>
        <definition>CBuffer3DView&lt; T &gt; muda::DeviceBuffer3D&lt; T &gt;::view</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>view</name>
        <qualifiedname>muda::DeviceBuffer3D::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="77" column="19" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1aa928aae407e9727e6f4b9cfda1602028" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::operator CBuffer3DView&lt; T &gt;</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>operator CBuffer3DView&lt; T &gt;</name>
        <qualifiedname>muda::DeviceBuffer3D::operator CBuffer3DView&lt; T &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="82" column="5" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a88f7fa7db883dcfc390b33514e450c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>muda::DeviceBuffer3D&lt; T &gt;::~DeviceBuffer3D</definition>
        <argsstring>()</argsstring>
        <name>~DeviceBuffer3D</name>
        <qualifiedname>muda::DeviceBuffer3D::~DeviceBuffer3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="84" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1aa953a1726b6513676b1926a595c821e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceBuffer3D&lt; T &gt;::extent</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>extent</name>
        <qualifiedname>muda::DeviceBuffer3D::extent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="86" column="10" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a49c4e9878de7962b6627c2798546cdc2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceBuffer3D&lt; T &gt;::capacity</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>capacity</name>
        <qualifiedname>muda::DeviceBuffer3D::capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="87" column="10" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a898ee14d9b99bae69470c839041e80b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceBuffer3D&lt; T &gt;::pitch_bytes</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>pitch_bytes</name>
        <qualifiedname>muda::DeviceBuffer3D::pitch_bytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="88" column="10" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a5ca62e606f344a60aa2533db99ed06cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceBuffer3D&lt; T &gt;::pitch_bytes_area</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>pitch_bytes_area</name>
        <qualifiedname>muda::DeviceBuffer3D::pitch_bytes_area</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="89" column="10" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a8a17cacbc9e3e4a156371628f54bdece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::DeviceBuffer3D&lt; T &gt;::total_size</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>total_size</name>
        <qualifiedname>muda::DeviceBuffer3D::total_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="90" column="10" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1a9f0a91317d92a7ad953c67b22e63debc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * muda::DeviceBuffer3D&lt; T &gt;::data</definition>
        <argsstring>() MUDA_NOEXCEPT</argsstring>
        <name>data</name>
        <qualifiedname>muda::DeviceBuffer3D::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="94" column="13" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_device_buffer3_d_1af9d357d0174ff86dcf61873bf6376225" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T * muda::DeviceBuffer3D&lt; T &gt;::data</definition>
        <argsstring>() const MUDA_NOEXCEPT</argsstring>
        <name>data</name>
        <qualifiedname>muda::DeviceBuffer3D::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/buffer/device_buffer_3d.h" line="95" column="13" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="95" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/muda/buffer/device_buffer_3d.h" line="22" column="1" bodyfile="src/muda/buffer/device_buffer_3d.h" bodystart="23" bodyend="96"/>
    <listofallmembers>
      <member refid="classmuda_1_1_device_buffer3_d_1a3373c2e8cf6a6172637baf3c12d153ad" prot="private" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>BufferLaunch</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a49c4e9878de7962b6627c2798546cdc2" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>capacity</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a0039ce6237375baeb1cae53dafc7707e" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>clear</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a53c428047ad8d84d108868089832a0cd" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>copy_from</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a8fb3f3d00827929b143f643120c37e82" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>copy_to</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a97c473a7541e4ff640ae8ac3af0580fa" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>cviewer</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a9f0a91317d92a7ad953c67b22e63debc" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>data</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1af9d357d0174ff86dcf61873bf6376225" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>data</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1af17685a3a6f00468274e3cfe5f0f53b0" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>DeviceBuffer3D</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1abc7d0a6b1812b619cb84fd4bad70b2b7" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>DeviceBuffer3D</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ac58f7e58f3b9d193c46b98a1c3a9e486" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>DeviceBuffer3D</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a82d1b7dcb679cde832f3c828d611547c" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>DeviceBuffer3D</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a2da634c9bdf31793de3b6d9c53699f56" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>DeviceBuffer3D</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1aa953a1726b6513676b1926a595c821e6" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>extent</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ab714660c4758e1885d4e907d16773c73" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>fill</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ab502aa211bf510eeb62c50b1b978f705" prot="private" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>m_capacity</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1af308f0a1bd788faf4efa7baade5f480e" prot="private" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>m_data</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1af9f24795df50c1173ba2c7ef7b1f719c" prot="private" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>m_extent</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a5258262a571bdf6030850b6500f56aaa" prot="private" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>m_pitch_bytes</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ab6bed4f6ccb0ea9483b5c0ccadba7e23" prot="private" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>m_pitch_bytes_area</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a3da08685fa6b7d2236b99a33da67b81a" prot="private" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>NDReshaper</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ab49e7ce0f3e0d93d254ed02c2df2ccab" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>operator Buffer3DView&lt; T &gt;</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1aa928aae407e9727e6f4b9cfda1602028" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>operator CBuffer3DView&lt; T &gt;</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ac71c11df315398873accc456a0130184" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>operator=</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a43916ca65742a0da00b2fd5e4e08a1a7" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>operator=</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ac6e80a5c92cdf564f8e30a53a86ae48b" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>operator=</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a898ee14d9b99bae69470c839041e80b8" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>pitch_bytes</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a5ca62e606f344a60aa2533db99ed06cc" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>pitch_bytes_area</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ad7ad2aace7fa4d80923c36e919a4f97a" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>reserve</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a079a6b1fbe14f29c7deed68f5c37165b" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>resize</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1ac9bb86bd0d80848759a9ad22a205da6c" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>resize</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a47e5e38569e94cff116e8e575c7097f1" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>shrink_to_fit</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a8a17cacbc9e3e4a156371628f54bdece" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>total_size</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a357b48ccc3c823e53d940270911a01a1" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>value_type</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a89a53e658d4b7a9ff9c7a528e01fb5e5" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>view</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a5f542db079a54ff56ba2774e5e78aabf" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>view</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a72dbb7ad4da9d821662ae6c1389c5160" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>view</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a501a1234c20b31aba19377d78d2fcbe3" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>view</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1acac21b7b630dc4cb359845c0dff69508" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>viewer</name></member>
      <member refid="classmuda_1_1_device_buffer3_d_1a88f7fa7db883dcfc390b33514e450c64" prot="public" virt="non-virtual"><scope>muda::DeviceBuffer3D</scope><name>~DeviceBuffer3D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

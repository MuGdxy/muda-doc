<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmuda_1_1exception" kind="class" language="C++" prot="public">
    <compoundname>muda::exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <derivedcompoundref refid="classmuda_1_1cuda__error" prot="public" virt="non-virtual">muda::cuda_error&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classmuda_1_1invalid__argument" prot="public" virt="non-virtual">muda::invalid_argument</derivedcompoundref>
    <derivedcompoundref refid="classmuda_1_1logic__error" prot="public" virt="non-virtual">muda::logic_error</derivedcompoundref>
    <derivedcompoundref refid="classmuda_1_1not__implemented" prot="public" virt="non-virtual">muda::not_implemented</derivedcompoundref>
    <derivedcompoundref refid="classmuda_1_1out__of__range" prot="public" virt="non-virtual">muda::out_of_range</derivedcompoundref>
    <derivedcompoundref refid="classmuda_1_1runtime__error" prot="public" virt="non-virtual">muda::runtime_error</derivedcompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmuda_1_1exception_1a4f032e715c23520bc2fd2be7a5c9cb38" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string muda::exception::m_what</definition>
        <argsstring></argsstring>
        <name>m_what</name>
        <qualifiedname>muda::exception::m_what</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/exception.h" line="10" column="17" bodyfile="src/muda/exception.h" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1exception_1abd6be2026b5f7cd10bb31b6d92818e43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::exception::exception</definition>
        <argsstring>(const std::string &amp;msg)</argsstring>
        <name>exception</name>
        <qualifiedname>muda::exception::exception</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/exception.h" line="13" column="5" bodyfile="src/muda/exception.h" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1exception_1a60519375d5b3d21ea5c2a70cdc1f51bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>char const *</type>
        <definition>virtual char const  * muda::exception::what</definition>
        <argsstring>() const</argsstring>
        <name>what</name>
        <qualifiedname>muda::exception::what</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/exception.h" line="17" column="24" bodyfile="src/muda/exception.h" bodystart="17" bodyend="23"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>muda::cuda_error&lt; T &gt;</label>
        <link refid="classmuda_1_1cuda__error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>muda::exception</label>
        <link refid="classmuda_1_1exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>muda::invalid_argument</label>
        <link refid="classmuda_1_1invalid__argument"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>muda::logic_error</label>
        <link refid="classmuda_1_1logic__error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>muda::not_implemented</label>
        <link refid="classmuda_1_1not__implemented"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>muda::out_of_range</label>
        <link refid="classmuda_1_1out__of__range"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>muda::runtime_error</label>
        <link refid="classmuda_1_1runtime__error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>muda::exception</label>
        <link refid="classmuda_1_1exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="src/muda/exception.h" line="8" column="1" bodyfile="src/muda/exception.h" bodystart="9" bodyend="24"/>
    <listofallmembers>
      <member refid="classmuda_1_1exception_1abd6be2026b5f7cd10bb31b6d92818e43" prot="public" virt="non-virtual"><scope>muda::exception</scope><name>exception</name></member>
      <member refid="classmuda_1_1exception_1a4f032e715c23520bc2fd2be7a5c9cb38" prot="private" virt="non-virtual"><scope>muda::exception</scope><name>m_what</name></member>
      <member refid="classmuda_1_1exception_1a60519375d5b3d21ea5c2a70cdc1f51bd" prot="public" virt="virtual"><scope>muda::exception</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

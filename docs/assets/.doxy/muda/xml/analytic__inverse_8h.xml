<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="analytic__inverse_8h" kind="file" language="C++">
    <compoundname>analytic_inverse.h</compoundname>
    <includes refid="muda__def_8h" local="no">muda/muda_def.h</includes>
    <includes refid="eigen__core__cxx20_8h" local="no">muda/ext/eigen/eigen_core_cxx20.h</includes>
    <includedby refid="inverse_8h" local="no">src/muda/ext/eigen/inverse.h</includedby>
    <incdepgraph>
      <node id="6">
        <label>cuda_runtime.h</label>
        <link refid="cuda__runtime_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cuda_runtime_api.h</label>
        <link refid="cuda__runtime__api_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>muda/ext/eigen/eigen_core_cxx20.h</label>
        <link refid="eigen__core__cxx20_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>muda/ext/eigen/eigen_cxx20.h</label>
        <link refid="eigen__cxx20_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/muda/ext/eigen/inverse/analytic_inverse.h</label>
        <link refid="analytic__inverse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>muda/muda_config.h</label>
        <link refid="muda__config_8h_source"/>
      </node>
      <node id="2">
        <label>muda/muda_def.h</label>
        <link refid="muda__def_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>muda/tools/platform.h</label>
        <link refid="platform_8h_source"/>
      </node>
      <node id="10">
        <label>Eigen/Core</label>
      </node>
      <node id="5">
        <label>cuda.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/muda/ext/eigen.h</label>
        <link refid="eigen_8h_source"/>
      </node>
      <node id="2">
        <label>src/muda/ext/eigen/inverse.h</label>
        <link refid="inverse_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/muda/ext/eigen/inverse/analytic_inverse.h</label>
        <link refid="analytic__inverse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmuda_1_1eigen_1_1_analytical_inverse" prot="public">muda::eigen::AnalyticalInverse</innerclass>
    <innernamespace refid="namespacemuda">muda</innernamespace>
    <innernamespace refid="namespacemuda_1_1eigen">muda::eigen</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;muda/muda_def.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;muda/ext/eigen/eigen_core_cxx20.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">muda::eigen</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7" refid="structmuda_1_1eigen_1_1_analytical_inverse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmuda_1_1eigen_1_1_analytical_inverse" kindref="compound">AnalyticalInverse</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>MUDA_INLINE<sp/>MUDA_GENERIC<sp/>Eigen::Matrix&lt;T,<sp/>2,<sp/>2&gt;<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;T,<sp/>2,<sp/>2&gt;&amp;<sp/>m)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;T,<sp/>2,<sp/>2&gt;<sp/>result;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invert2x2(m.data(),<sp/>result.data());</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>MUDA_INLINE<sp/>MUDA_GENERIC<sp/>Eigen::Matrix&lt;T,<sp/>3,<sp/>3&gt;<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;T,<sp/>3,<sp/>3&gt;&amp;<sp/>m)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;T,<sp/>3,<sp/>3&gt;<sp/>result;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invert3x3(m.data(),<sp/>result.data());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>MUDA_INLINE<sp/>MUDA_GENERIC<sp/>Eigen::Matrix&lt;T,<sp/>4,<sp/>4&gt;<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;T,<sp/>4,<sp/>4&gt;&amp;<sp/>m)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;T,<sp/>4,<sp/>4&gt;<sp/>result;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invert4x4(m.data(),<sp/>result.data());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>MUDA_INLINE<sp/>MUDA_GENERIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invert2x2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>src,<sp/>T*<sp/>dst)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>det;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>adjoint:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>+src[3];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>-src[1];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>-src[2];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3]<sp/>=<sp/>+src[0];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>determinant:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>src[0]<sp/>*<sp/>dst[0]<sp/>+<sp/>src[1]<sp/>*<sp/>dst[2];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiply<sp/>adjoint<sp/>with<sp/>reciprocal<sp/>of<sp/>determinant:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>1.0f<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>MUDA_INLINE<sp/>MUDA_GENERIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invert3x3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>src,<sp/>T*<sp/>dst)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>det;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>adjoint:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>+src[4]<sp/>*<sp/>src[8]<sp/>-<sp/>src[5]<sp/>*<sp/>src[7];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>-src[1]<sp/>*<sp/>src[8]<sp/>+<sp/>src[2]<sp/>*<sp/>src[7];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>+src[1]<sp/>*<sp/>src[5]<sp/>-<sp/>src[2]<sp/>*<sp/>src[4];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3]<sp/>=<sp/>-src[3]<sp/>*<sp/>src[8]<sp/>+<sp/>src[5]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[4]<sp/>=<sp/>+src[0]<sp/>*<sp/>src[8]<sp/>-<sp/>src[2]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[5]<sp/>=<sp/>-src[0]<sp/>*<sp/>src[5]<sp/>+<sp/>src[2]<sp/>*<sp/>src[3];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[6]<sp/>=<sp/>+src[3]<sp/>*<sp/>src[7]<sp/>-<sp/>src[4]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[7]<sp/>=<sp/>-src[0]<sp/>*<sp/>src[7]<sp/>+<sp/>src[1]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[8]<sp/>=<sp/>+src[0]<sp/>*<sp/>src[4]<sp/>-<sp/>src[1]<sp/>*<sp/>src[3];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>determinant:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>src[0]<sp/>*<sp/>dst[0]<sp/>+<sp/>src[1]<sp/>*<sp/>dst[3]<sp/>+<sp/>src[2]<sp/>*<sp/>dst[6];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiply<sp/>adjoint<sp/>with<sp/>reciprocal<sp/>of<sp/>determinant:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>1.0f<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[4]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[5]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[6]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[7]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[8]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>MUDA_INLINE<sp/>MUDA_GENERIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invert4x4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>src,<sp/>T*<sp/>dst)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>det;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>adjoint:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>+src[5]<sp/>*<sp/>src[10]<sp/>*<sp/>src[15]<sp/>-<sp/>src[5]<sp/>*<sp/>src[11]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[9]<sp/>*<sp/>src[6]<sp/>*<sp/>src[15]<sp/>+<sp/>src[9]<sp/>*<sp/>src[7]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[13]<sp/>*<sp/>src[6]<sp/>*<sp/>src[11]<sp/>-<sp/>src[13]<sp/>*<sp/>src[7]<sp/>*<sp/>src[10];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>-src[1]<sp/>*<sp/>src[10]<sp/>*<sp/>src[15]<sp/>+<sp/>src[1]<sp/>*<sp/>src[11]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[9]<sp/>*<sp/>src[2]<sp/>*<sp/>src[15]<sp/>-<sp/>src[9]<sp/>*<sp/>src[3]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[13]<sp/>*<sp/>src[2]<sp/>*<sp/>src[11]<sp/>+<sp/>src[13]<sp/>*<sp/>src[3]<sp/>*<sp/>src[10];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>+src[1]<sp/>*<sp/>src[6]<sp/>*<sp/>src[15]<sp/>-<sp/>src[1]<sp/>*<sp/>src[7]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[5]<sp/>*<sp/>src[2]<sp/>*<sp/>src[15]<sp/>+<sp/>src[5]<sp/>*<sp/>src[3]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[13]<sp/>*<sp/>src[2]<sp/>*<sp/>src[7]<sp/>-<sp/>src[13]<sp/>*<sp/>src[3]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3]<sp/>=<sp/>-src[1]<sp/>*<sp/>src[6]<sp/>*<sp/>src[11]<sp/>+<sp/>src[1]<sp/>*<sp/>src[7]<sp/>*<sp/>src[10]</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[5]<sp/>*<sp/>src[2]<sp/>*<sp/>src[11]<sp/>-<sp/>src[5]<sp/>*<sp/>src[3]<sp/>*<sp/>src[10]</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[9]<sp/>*<sp/>src[2]<sp/>*<sp/>src[7]<sp/>+<sp/>src[9]<sp/>*<sp/>src[3]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[4]<sp/>=<sp/>-src[4]<sp/>*<sp/>src[10]<sp/>*<sp/>src[15]<sp/>+<sp/>src[4]<sp/>*<sp/>src[11]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[8]<sp/>*<sp/>src[6]<sp/>*<sp/>src[15]<sp/>-<sp/>src[8]<sp/>*<sp/>src[7]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[12]<sp/>*<sp/>src[6]<sp/>*<sp/>src[11]<sp/>+<sp/>src[12]<sp/>*<sp/>src[7]<sp/>*<sp/>src[10];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[5]<sp/>=<sp/>+src[0]<sp/>*<sp/>src[10]<sp/>*<sp/>src[15]<sp/>-<sp/>src[0]<sp/>*<sp/>src[11]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[8]<sp/>*<sp/>src[2]<sp/>*<sp/>src[15]<sp/>+<sp/>src[8]<sp/>*<sp/>src[3]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[12]<sp/>*<sp/>src[2]<sp/>*<sp/>src[11]<sp/>-<sp/>src[12]<sp/>*<sp/>src[3]<sp/>*<sp/>src[10];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[6]<sp/>=<sp/>-src[0]<sp/>*<sp/>src[6]<sp/>*<sp/>src[15]<sp/>+<sp/>src[0]<sp/>*<sp/>src[7]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[4]<sp/>*<sp/>src[2]<sp/>*<sp/>src[15]<sp/>-<sp/>src[4]<sp/>*<sp/>src[3]<sp/>*<sp/>src[14]</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[12]<sp/>*<sp/>src[2]<sp/>*<sp/>src[7]<sp/>+<sp/>src[12]<sp/>*<sp/>src[3]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[7]<sp/>=<sp/>+src[0]<sp/>*<sp/>src[6]<sp/>*<sp/>src[11]<sp/>-<sp/>src[0]<sp/>*<sp/>src[7]<sp/>*<sp/>src[10]</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[4]<sp/>*<sp/>src[2]<sp/>*<sp/>src[11]<sp/>+<sp/>src[4]<sp/>*<sp/>src[3]<sp/>*<sp/>src[10]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[8]<sp/>*<sp/>src[2]<sp/>*<sp/>src[7]<sp/>-<sp/>src[8]<sp/>*<sp/>src[3]<sp/>*<sp/>src[6];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[8]<sp/>=<sp/>+src[4]<sp/>*<sp/>src[9]<sp/>*<sp/>src[15]<sp/>-<sp/>src[4]<sp/>*<sp/>src[11]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[8]<sp/>*<sp/>src[5]<sp/>*<sp/>src[15]<sp/>+<sp/>src[8]<sp/>*<sp/>src[7]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[12]<sp/>*<sp/>src[5]<sp/>*<sp/>src[11]<sp/>-<sp/>src[12]<sp/>*<sp/>src[7]<sp/>*<sp/>src[9];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[9]<sp/>=<sp/>-src[0]<sp/>*<sp/>src[9]<sp/>*<sp/>src[15]<sp/>+<sp/>src[0]<sp/>*<sp/>src[11]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[8]<sp/>*<sp/>src[1]<sp/>*<sp/>src[15]<sp/>-<sp/>src[8]<sp/>*<sp/>src[3]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[12]<sp/>*<sp/>src[1]<sp/>*<sp/>src[11]<sp/>+<sp/>src[12]<sp/>*<sp/>src[3]<sp/>*<sp/>src[9];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[10]<sp/>=<sp/>+src[0]<sp/>*<sp/>src[5]<sp/>*<sp/>src[15]<sp/>-<sp/>src[0]<sp/>*<sp/>src[7]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[4]<sp/>*<sp/>src[1]<sp/>*<sp/>src[15]<sp/>+<sp/>src[4]<sp/>*<sp/>src[3]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[12]<sp/>*<sp/>src[1]<sp/>*<sp/>src[7]<sp/>-<sp/>src[12]<sp/>*<sp/>src[3]<sp/>*<sp/>src[5];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[11]<sp/>=<sp/>-src[0]<sp/>*<sp/>src[5]<sp/>*<sp/>src[11]<sp/>+<sp/>src[0]<sp/>*<sp/>src[7]<sp/>*<sp/>src[9]</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[4]<sp/>*<sp/>src[1]<sp/>*<sp/>src[11]<sp/>-<sp/>src[4]<sp/>*<sp/>src[3]<sp/>*<sp/>src[9]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[8]<sp/>*<sp/>src[1]<sp/>*<sp/>src[7]<sp/>+<sp/>src[8]<sp/>*<sp/>src[3]<sp/>*<sp/>src[5];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[12]<sp/>=<sp/>-src[4]<sp/>*<sp/>src[9]<sp/>*<sp/>src[14]<sp/>+<sp/>src[4]<sp/>*<sp/>src[10]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[8]<sp/>*<sp/>src[5]<sp/>*<sp/>src[14]<sp/>-<sp/>src[8]<sp/>*<sp/>src[6]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[12]<sp/>*<sp/>src[5]<sp/>*<sp/>src[10]<sp/>+<sp/>src[12]<sp/>*<sp/>src[6]<sp/>*<sp/>src[9];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[13]<sp/>=<sp/>+src[0]<sp/>*<sp/>src[9]<sp/>*<sp/>src[14]<sp/>-<sp/>src[0]<sp/>*<sp/>src[10]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[8]<sp/>*<sp/>src[1]<sp/>*<sp/>src[14]<sp/>+<sp/>src[8]<sp/>*<sp/>src[2]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[12]<sp/>*<sp/>src[1]<sp/>*<sp/>src[10]<sp/>-<sp/>src[12]<sp/>*<sp/>src[2]<sp/>*<sp/>src[9];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[14]<sp/>=<sp/>-src[0]<sp/>*<sp/>src[5]<sp/>*<sp/>src[14]<sp/>+<sp/>src[0]<sp/>*<sp/>src[6]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[4]<sp/>*<sp/>src[1]<sp/>*<sp/>src[14]<sp/>-<sp/>src[4]<sp/>*<sp/>src[2]<sp/>*<sp/>src[13]</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[12]<sp/>*<sp/>src[1]<sp/>*<sp/>src[6]<sp/>+<sp/>src[12]<sp/>*<sp/>src[2]<sp/>*<sp/>src[5];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[15]<sp/>=<sp/>+src[0]<sp/>*<sp/>src[5]<sp/>*<sp/>src[10]<sp/>-<sp/>src[0]<sp/>*<sp/>src[6]<sp/>*<sp/>src[9]</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>src[4]<sp/>*<sp/>src[1]<sp/>*<sp/>src[10]<sp/>+<sp/>src[4]<sp/>*<sp/>src[2]<sp/>*<sp/>src[9]</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>src[8]<sp/>*<sp/>src[1]<sp/>*<sp/>src[6]<sp/>-<sp/>src[8]<sp/>*<sp/>src[2]<sp/>*<sp/>src[5];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>determinant:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>+src[0]<sp/>*<sp/>dst[0]<sp/>+<sp/>src[1]<sp/>*<sp/>dst[4]<sp/>+<sp/>src[2]<sp/>*<sp/>dst[8]<sp/>+<sp/>src[3]<sp/>*<sp/>dst[12];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiply<sp/>adjoint<sp/>with<sp/>reciprocal<sp/>of<sp/>determinant:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>1.0f<sp/>/<sp/>det;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[4]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[5]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[6]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[7]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[8]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[9]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[10]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[11]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[12]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[13]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[14]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[15]<sp/>*=<sp/>det;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>muda::eigen::inverse</highlight></codeline>
    </programlisting>
    <location file="src/muda/ext/eigen/inverse/analytic_inverse.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classmuda_1_1_field_entry" kind="class" language="C++" prot="public">
    <compoundname>muda::FieldEntry</compoundname>
    <basecompoundref refid="classmuda_1_1_field_entry_base" prot="public" virt="non-virtual">muda::FieldEntryBase</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>FieldEntryLayout</type>
        <declname>Layout</declname>
        <defname>Layout</defname>
      </param>
      <param>
        <type>int</type>
        <declname>M</declname>
        <defname>M</defname>
      </param>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmuda_1_1_field_entry_1a73591209d7baa1c8bcd34bdb360ded35" prot="public" static="no">
        <type>typename <ref refid="classmuda_1_1_field_entry_view" kindref="compound">FieldEntryView</ref>&lt; T, Layout, M, N &gt;::ElementType</type>
        <definition>using muda::FieldEntry&lt; T, Layout, M, N &gt;::ElementType =  typename FieldEntryView&lt;T, Layout, M, N&gt;::ElementType</definition>
        <argsstring></argsstring>
        <name>ElementType</name>
        <qualifiedname>muda::FieldEntry::ElementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="80" column="5" bodyfile="src/muda/ext/field/field_entry.h" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmuda_1_1_field_entry_1a9371c002706158cca09f79197723f39b" prot="private" static="no" mutable="yes">
        <type><ref refid="classmuda_1_1_device_buffer" kindref="compound">DeviceBuffer</ref>&lt; ElementType &gt;</type>
        <definition>DeviceBuffer&lt;ElementType&gt; muda::FieldEntry&lt; T, Layout, M, N &gt;::m_workpace</definition>
        <argsstring></argsstring>
        <name>m_workpace</name>
        <qualifiedname>muda::FieldEntry::m_workpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="166" column="26" bodyfile="src/muda/ext/field/field_entry.h" bodystart="166" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classmuda_1_1_field_entry_1adf430b6f23902404bf7bfe7a1352e3d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::FieldEntry&lt; T, Layout, M, N &gt;::FieldEntry</definition>
        <argsstring>(SubField &amp;field, FieldEntryLayoutInfo layout, FieldEntryType type, std::string_view name)</argsstring>
        <name>FieldEntry</name>
        <qualifiedname>muda::FieldEntry::FieldEntry</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_sub_field" kindref="compound">SubField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="classmuda_1_1_field_entry_layout_info" kindref="compound">FieldEntryLayoutInfo</ref></type>
          <declname>layout</declname>
        </param>
        <param>
          <type>FieldEntryType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="82" column="5" bodyfile="src/muda/ext/field/field_entry.h" bodystart="82" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1ab2a140512c7de39ed1684f55cd985fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>muda::FieldEntry&lt; T, Layout, M, N &gt;::FieldEntry</definition>
        <argsstring>(SubField &amp;field, FieldEntryLayoutInfo layout, FieldEntryType type, uint2 shape, std::string_view name)</argsstring>
        <name>FieldEntry</name>
        <qualifiedname>muda::FieldEntry::FieldEntry</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_sub_field" kindref="compound">SubField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="classmuda_1_1_field_entry_layout_info" kindref="compound">FieldEntryLayoutInfo</ref></type>
          <declname>layout</declname>
        </param>
        <param>
          <type>FieldEntryType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="91" column="5" bodyfile="src/muda/ext/field/field_entry.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a114cbfb4c3c9af76ff64f9fcd8d780a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_field_entry_view" kindref="compound">FieldEntryView</ref>&lt; T, Layout, M, N &gt;</type>
        <definition>FieldEntryView&lt; T, Layout, M, N &gt; muda::FieldEntry&lt; T, Layout, M, N &gt;::view</definition>
        <argsstring>()</argsstring>
        <name>view</name>
        <qualifiedname>muda::FieldEntry::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="96" column="20" bodyfile="src/muda/ext/field/field_entry.h" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1ab1f8ac261c4e4e0290abf3755d47e66f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmuda_1_1_c_field_entry_view" kindref="compound">CFieldEntryView</ref>&lt; T, Layout, M, N &gt;</type>
        <definition>CFieldEntryView&lt; T, Layout, M, N &gt; muda::FieldEntry&lt; T, Layout, M, N &gt;::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <qualifiedname>muda::FieldEntry::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="103" column="21" bodyfile="src/muda/ext/field/field_entry.h" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a283f25c544c497c12bab9f8ce5638e1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::FieldEntry&lt; T, Layout, M, N &gt;::view</definition>
        <argsstring>(int offset)</argsstring>
        <name>view</name>
        <qualifiedname>muda::FieldEntry::view</qualifiedname>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="110" column="10" bodyfile="src/muda/ext/field/field_entry.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a2caa0d72c4c303868b8bb87d5597fabd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::FieldEntry&lt; T, Layout, M, N &gt;::view</definition>
        <argsstring>(int offset) const</argsstring>
        <name>view</name>
        <qualifiedname>muda::FieldEntry::view</qualifiedname>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="111" column="10" bodyfile="src/muda/ext/field/field_entry.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a77ab49f29b0b0fd9ed01a57294d65c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::FieldEntry&lt; T, Layout, M, N &gt;::view</definition>
        <argsstring>(int offset, int count)</argsstring>
        <name>view</name>
        <qualifiedname>muda::FieldEntry::view</qualifiedname>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="113" column="10" bodyfile="src/muda/ext/field/field_entry.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a13d098a52500a50bd983be1f0f18bdab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto muda::FieldEntry&lt; T, Layout, M, N &gt;::view</definition>
        <argsstring>(int offset, int count) const</argsstring>
        <name>view</name>
        <qualifiedname>muda::FieldEntry::view</qualifiedname>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="114" column="10" bodyfile="src/muda/ext/field/field_entry.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1ad14e667bec21712477a91db553cda28f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FieldEntryViewer&lt; T, Layout, M, N &gt;</type>
        <definition>FieldEntryViewer&lt; T, Layout, M, N &gt; muda::FieldEntry&lt; T, Layout, M, N &gt;::viewer</definition>
        <argsstring>()</argsstring>
        <name>viewer</name>
        <qualifiedname>muda::FieldEntry::viewer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="119" column="23" bodyfile="src/muda/ext/field/field_entry.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a8966ddedddc6d26742e8388829eae010" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CFieldEntryViewer&lt; T, Layout, M, N &gt;</type>
        <definition>CFieldEntryViewer&lt; T, Layout, M, N &gt; muda::FieldEntry&lt; T, Layout, M, N &gt;::cviewer</definition>
        <argsstring>() const</argsstring>
        <name>cviewer</name>
        <qualifiedname>muda::FieldEntry::cviewer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="120" column="23" bodyfile="src/muda/ext/field/field_entry.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1ab0d3014019b2bacf6155574b30e5955a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::FieldEntry&lt; T, Layout, M, N &gt;::copy_to</definition>
        <argsstring>(DeviceBuffer&lt; ElementType &gt; &amp;dst) const</argsstring>
        <name>copy_to</name>
        <qualifiedname>muda::FieldEntry::copy_to</qualifiedname>
        <param>
          <type><ref refid="classmuda_1_1_device_buffer" kindref="compound">DeviceBuffer</ref>&lt; ElementType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1ad2658b9fa7d46ac1dbe7ce0f389c5c64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::FieldEntry&lt; T, Layout, M, N &gt;::copy_to</definition>
        <argsstring>(std::vector&lt; ElementType &gt; &amp;dst) const</argsstring>
        <name>copy_to</name>
        <qualifiedname>muda::FieldEntry::copy_to</qualifiedname>
        <param>
          <type>std::vector&lt; ElementType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a382f9a47ba9fbedfb00b878ae9138935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::FieldEntry&lt; T, Layout, M, N &gt;::copy_from</definition>
        <argsstring>(const DeviceBuffer&lt; ElementType &gt; &amp;src)</argsstring>
        <name>copy_from</name>
        <qualifiedname>muda::FieldEntry::copy_from</qualifiedname>
        <param>
          <type>const <ref refid="classmuda_1_1_device_buffer" kindref="compound">DeviceBuffer</ref>&lt; ElementType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="128" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a8e205c2a887134a0dbae8bb651bf1851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::FieldEntry&lt; T, Layout, M, N &gt;::copy_from</definition>
        <argsstring>(const std::vector&lt; ElementType &gt; &amp;src)</argsstring>
        <name>copy_from</name>
        <qualifiedname>muda::FieldEntry::copy_from</qualifiedname>
        <param>
          <type>const std::vector&lt; ElementType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1acf2a0a6b81a73b75930ee3ef35739e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>FieldEntryLayout</type>
            <declname>SrcLayout</declname>
            <defname>SrcLayout</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void muda::FieldEntry&lt; T, Layout, M, N &gt;::copy_from</definition>
        <argsstring>(const FieldEntry&lt; T, SrcLayout, M, N &gt; &amp;src)</argsstring>
        <name>copy_from</name>
        <qualifiedname>muda::FieldEntry::copy_from</qualifiedname>
        <param>
          <type>const <ref refid="classmuda_1_1_field_entry" kindref="compound">FieldEntry</ref>&lt; T, SrcLayout, M, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1ae3567de9d23f06d7cff3fe4d9bc5bcf5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void muda::FieldEntry&lt; T, Layout, M, N &gt;::async_copy_to_new_place</definition>
        <argsstring>(HostDeviceConfigView&lt; FieldEntryCore &gt; new_place) const override</argsstring>
        <name>async_copy_to_new_place</name>
        <qualifiedname>muda::FieldEntry::async_copy_to_new_place</qualifiedname>
        <reimplements refid="classmuda_1_1_field_entry_base_1a0fbea2ead2902dd7b44d5abb960238ea">async_copy_to_new_place</reimplements>
        <param>
          <type><ref refid="classmuda_1_1_host_device_config_view" kindref="compound">HostDeviceConfigView</ref>&lt; <ref refid="classmuda_1_1_field_entry_core" kindref="compound">FieldEntryCore</ref> &gt;</type>
          <declname>new_place</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="134" column="18" bodyfile="src/muda/ext/field/field_entry.h" bodystart="134" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classmuda_1_1_field_entry_1a4f750bc6f95afd1dc861005b52c6e55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void muda::FieldEntry&lt; T, Layout, M, N &gt;::fill</definition>
        <argsstring>(const ElementType &amp;value)</argsstring>
        <name>fill</name>
        <qualifiedname>muda::FieldEntry::fill</qualifiedname>
        <param>
          <type>const ElementType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/ext/field/field_entry.h" line="163" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>muda::FieldEntry&lt; T, Layout, M, N &gt;</label>
        <link refid="classmuda_1_1_field_entry"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::FieldEntryBase</label>
        <link refid="classmuda_1_1_field_entry_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>muda::HostDeviceConfig&lt; muda::FieldEntryCore &gt;</label>
        <link refid="classmuda_1_1_host_device_config"/>
      </node>
      <node id="1">
        <label>muda::FieldEntry&lt; T, Layout, M, N &gt;</label>
        <link refid="classmuda_1_1_field_entry"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>muda::FieldEntryBase</label>
        <link refid="classmuda_1_1_field_entry_base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_field</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_core</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_host_device_core</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>muda::FieldEntryCore</label>
        <link refid="classmuda_1_1_field_entry_core"/>
      </node>
      <node id="3">
        <label>muda::SubField</label>
        <link refid="classmuda_1_1_sub_field"/>
      </node>
    </collaborationgraph>
    <location file="src/muda/ext/field/field_entry.h" line="75" column="1" bodyfile="src/muda/ext/field/field_entry.h" bodystart="76" bodyend="167"/>
    <listofallmembers>
      <member refid="classmuda_1_1_field_entry_1ae3567de9d23f06d7cff3fe4d9bc5bcf5" prot="public" virt="virtual"><scope>muda::FieldEntry</scope><name>async_copy_to_new_place</name></member>
      <member refid="classmuda_1_1_field_entry_1a382f9a47ba9fbedfb00b878ae9138935" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>copy_from</name></member>
      <member refid="classmuda_1_1_field_entry_1a8e205c2a887134a0dbae8bb651bf1851" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>copy_from</name></member>
      <member refid="classmuda_1_1_field_entry_1acf2a0a6b81a73b75930ee3ef35739e75" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>copy_from</name></member>
      <member refid="classmuda_1_1_field_entry_1ab0d3014019b2bacf6155574b30e5955a" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>copy_to</name></member>
      <member refid="classmuda_1_1_field_entry_1ad2658b9fa7d46ac1dbe7ce0f389c5c64" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>copy_to</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a6e38ffa7019d6ff68ce40ac0a621b2dd" prot="protected" virt="non-virtual"><scope>muda::FieldEntry</scope><name>core</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a30ab8947c205f6f9e6768dd526732e58" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>count</name></member>
      <member refid="classmuda_1_1_field_entry_1a8966ddedddc6d26742e8388829eae010" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>cviewer</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a74b0f640dbbc2df0a3b4ce22d3383b59" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>elem_byte_size</name></member>
      <member refid="classmuda_1_1_field_entry_1a73591209d7baa1c8bcd34bdb360ded35" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>ElementType</name></member>
      <member refid="classmuda_1_1_field_entry_1adf430b6f23902404bf7bfe7a1352e3d5" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>FieldEntry</name></member>
      <member refid="classmuda_1_1_field_entry_1ab2a140512c7de39ed1684f55cd985fb0" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>FieldEntry</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a5eee7535d4c306b11777bcdf08a4e323" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>FieldEntryBase</name></member>
      <member refid="classmuda_1_1_field_entry_base_1abf2c9d6d143dde7fd936577780d24626" prot="protected" virt="non-virtual"><scope>muda::FieldEntry</scope><name>FieldEntryBase</name></member>
      <member refid="classmuda_1_1_field_entry_1a4f750bc6f95afd1dc861005b52c6e55e" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>fill</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a16921481afabae3bdac43c4e22e67edc" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>layout</name></member>
      <member refid="classmuda_1_1_field_entry_base_1afa8235a174615805c6d00522cf07b266" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>layout_info</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a7e9c40c8bb1bd3b2b60126569a69c7ab" prot="protected" virt="non-virtual"><scope>muda::FieldEntry</scope><name>m_core</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a93692e8e906cc05b0f78b1263deea647" prot="protected" virt="non-virtual"><scope>muda::FieldEntry</scope><name>m_field</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a86bb0365ade9c3d3962901ea990ae230" prot="protected" virt="non-virtual"><scope>muda::FieldEntry</scope><name>m_host_device_core</name></member>
      <member refid="classmuda_1_1_field_entry_base_1afd9428b540282f19b55495e165f58139" prot="protected" virt="non-virtual"><scope>muda::FieldEntry</scope><name>m_name</name></member>
      <member refid="classmuda_1_1_field_entry_1a9371c002706158cca09f79197723f39b" prot="private" virt="non-virtual"><scope>muda::FieldEntry</scope><name>m_workpace</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a83d609bf6f5f976f34d7bc5b81df3655" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>name</name></member>
      <member refid="classmuda_1_1_field_entry_base_1abd9f887161c3f3600d76d3f3286cd9c4" prot="protected" virt="non-virtual"><scope>muda::FieldEntry</scope><name>operator=</name></member>
      <member refid="classmuda_1_1_field_entry_base_1ad09bb46eaead80a087e0366e10d15673" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>shape</name></member>
      <member refid="classmuda_1_1_field_entry_base_1aded04bb6df5acafdd00fc43a40bdff6a" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>struct_stride</name></member>
      <member refid="classmuda_1_1_field_entry_1a114cbfb4c3c9af76ff64f9fcd8d780a8" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>view</name></member>
      <member refid="classmuda_1_1_field_entry_1ab1f8ac261c4e4e0290abf3755d47e66f" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>view</name></member>
      <member refid="classmuda_1_1_field_entry_1a283f25c544c497c12bab9f8ce5638e1a" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>view</name></member>
      <member refid="classmuda_1_1_field_entry_1a2caa0d72c4c303868b8bb87d5597fabd" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>view</name></member>
      <member refid="classmuda_1_1_field_entry_1a77ab49f29b0b0fd9ed01a57294d65c88" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>view</name></member>
      <member refid="classmuda_1_1_field_entry_1a13d098a52500a50bd983be1f0f18bdab" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>view</name></member>
      <member refid="classmuda_1_1_field_entry_1ad14e667bec21712477a91db553cda28f" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>viewer</name></member>
      <member refid="classmuda_1_1_field_entry_base_1a9972f9c362e71733846a8fc53b298d3b" prot="public" virt="non-virtual"><scope>muda::FieldEntry</scope><name>~FieldEntryBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

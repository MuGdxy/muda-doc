<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.1" xml:lang="en-US">
  <compounddef id="classmuda_1_1_view_base" kind="class" language="C++" prot="public">
    <compoundname>muda::ViewBase</compoundname>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst_</declname>
        <defname>IsConst_</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmuda_1_1_view_base_1afc7108a8ee7985d4b73afcb8cffae166" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::conditional_t&lt; IsConst, const T, T &gt;</type>
        <definition>using muda::ViewBase&lt; IsConst_ &gt;::auto_const_t =  std::conditional_t&lt;IsConst, const T, T&gt;</definition>
        <argsstring></argsstring>
        <name>auto_const_t</name>
        <qualifiedname>muda::ViewBase::auto_const_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/view/view_base.h" line="13" column="5" bodyfile="src/muda/view/view_base.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmuda_1_1_view_base_1a39d227092dd2b7baba8b7c74bf018f37" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; IsNonConst, T &gt;</type>
        <definition>using muda::ViewBase&lt; IsConst_ &gt;::non_const_enable_t =  std::enable_if_t&lt;IsNonConst, T&gt;</definition>
        <argsstring></argsstring>
        <name>non_const_enable_t</name>
        <qualifiedname>muda::ViewBase::non_const_enable_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/view/view_base.h" line="15" column="5" bodyfile="src/muda/view/view_base.h" bodystart="15" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmuda_1_1_view_base_1a462988275a74be2325fcf57408700ce9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>bool</type>
        <definition>bool muda::ViewBase&lt; IsConst_ &gt;::IsConst</definition>
        <argsstring></argsstring>
        <name>IsConst</name>
        <qualifiedname>muda::ViewBase::IsConst</qualifiedname>
        <initializer>= IsConst_</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/view/view_base.h" line="10" column="27" bodyfile="src/muda/view/view_base.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmuda_1_1_view_base_1ae40f0a1f86127bc4dfeae5e08027e1dc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>bool</type>
        <definition>bool muda::ViewBase&lt; IsConst_ &gt;::IsNonConst</definition>
        <argsstring></argsstring>
        <name>IsNonConst</name>
        <qualifiedname>muda::ViewBase::IsNonConst</qualifiedname>
        <initializer>= !IsConst_</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/view/view_base.h" line="11" column="27" bodyfile="src/muda/view/view_base.h" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmuda_1_1_view_base_1a53698ad0d9acb6f3d54a610910c3456b" prot="private" static="no" mutable="no">
        <type>std::byte</type>
        <definition>std::byte muda::ViewBase&lt; IsConst_ &gt;::_dummy</definition>
        <argsstring></argsstring>
        <name>_dummy</name>
        <qualifiedname>muda::ViewBase::_dummy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/muda/view/view_base.h" line="18" column="15" bodyfile="src/muda/view/view_base.h" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/muda/view/view_base.h" line="7" column="1" bodyfile="src/muda/view/view_base.h" bodystart="8" bodyend="19"/>
    <listofallmembers>
      <member refid="classmuda_1_1_view_base_1a53698ad0d9acb6f3d54a610910c3456b" prot="private" virt="non-virtual"><scope>muda::ViewBase</scope><name>_dummy</name></member>
      <member refid="classmuda_1_1_view_base_1afc7108a8ee7985d4b73afcb8cffae166" prot="public" virt="non-virtual"><scope>muda::ViewBase</scope><name>auto_const_t</name></member>
      <member refid="classmuda_1_1_view_base_1a462988275a74be2325fcf57408700ce9" prot="public" virt="non-virtual"><scope>muda::ViewBase</scope><name>IsConst</name></member>
      <member refid="classmuda_1_1_view_base_1ae40f0a1f86127bc4dfeae5e08027e1dc" prot="public" virt="non-virtual"><scope>muda::ViewBase</scope><name>IsNonConst</name></member>
      <member refid="classmuda_1_1_view_base_1a39d227092dd2b7baba8b7c74bf018f37" prot="public" virt="non-virtual"><scope>muda::ViewBase</scope><name>non_const_enable_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
